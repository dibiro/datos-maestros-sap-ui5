jQuery.sap.registerPreloadedModules({version:"2.0",name:"datosmaestros3/datosmaestros3/Component-preload",modules:{"datosmaestros3/datosmaestros3/Component.js":'sap.ui.define([\n\t"sap/ui/core/UIComponent",\n\t"sap/ui/Device",\n\t"datosmaestros3/datosmaestros3/model/models"\n], function (UIComponent, Device, models) {\n\t"use strict";\n\n\treturn UIComponent.extend("datosmaestros3.datosmaestros3.Component", {\n\n\t\tmetadata: {\n\t\t\tmanifest: "json"\n\t\t},\n\n\t\t/**\n\t\t * The component is initialized by UI5 automatically during the startup of the app and calls the init method once.\n\t\t * @public\n\t\t * @override\n\t\t */\n\t\tinit: function () {\n\t\t\t// call the base component\'s init function\n\t\t\tUIComponent.prototype.init.apply(this, arguments);\n\n\t\t\t// enable routing\n\t\t\tthis.getRouter().initialize();\n\n\t\t\t// set the device model\n\t\t\tthis.setModel(models.createDeviceModel(), "device");\n\t\t}\n\t});\n});',"datosmaestros3/datosmaestros3/controller/index.controller.js":'sap.ui.define([\n\t"sap/ui/core/mvc/Controller"\n], function (Controller) {\n\t"use strict";\n\n\treturn Controller.extend("datosmaestros3.datosmaestros3.controller.index", {\n\t\tonInit: function () {\n\n\t\t}\n\t});\n});',"datosmaestros3/datosmaestros3/model/models.js":'sap.ui.define([\n\t"sap/ui/model/json/JSONModel",\n\t"sap/ui/Device"\n], function (JSONModel, Device) {\n\t"use strict";\n\n\treturn {\n\n\t\tcreateDeviceModel: function () {\n\t\t\tvar oModel = new JSONModel(Device);\n\t\t\toModel.setDefaultBindingMode("OneWay");\n\t\t\treturn oModel;\n\t\t}\n\n\t};\n});',"datosmaestros3/datosmaestros3/test/integration/AllJourneys.js":'sap.ui.define([\n\t"sap/ui/test/Opa5",\n\t"./arrangements/Startup",\n\t"./NavigationJourney"\n], function (Opa5, Startup) {\n\t"use strict";\n\n\tOpa5.extendConfig({\n\t\tarrangements: new Startup(),\n\t\tviewNamespace: "datosmaestros3.datosmaestros3.view.",\n\t\tautoWait: true\n\t});\n});',"datosmaestros3/datosmaestros3/test/integration/arrangements/Startup.js":'sap.ui.define([\n\t"sap/ui/test/Opa5"\n], function (Opa5) {\n\t"use strict";\n\n\treturn Opa5.extend("datosmaestros3.datosmaestros3.test.integration.arrangements.Startup", {\n\n\t\tiStartMyApp: function (oOptions) {\n\t\t\toOptions = oOptions || {};\n\n\t\t\t// start the app with a minimal delay to make tests fast but still async to discover basic timing issues\n\t\t\toOptions.delay = oOptions.delay || 50;\n\n\t\t\t// start the app UI component\n\t\t\tthis.iStartMyUIComponent({\n\t\t\t\tcomponentConfig: {\n\t\t\t\t\tname: "datosmaestros3.datosmaestros3",\n\t\t\t\t\tasync: true\n\t\t\t\t},\n\t\t\t\thash: oOptions.hash,\n\t\t\t\tautoWait: oOptions.autoWait\n\t\t\t});\n\t\t}\n\t});\n});',"datosmaestros3/datosmaestros3/test/integration/NavigationJourney.js":'\t/*global QUnit*/\n\n\tsap.ui.define([\n\t\t"sap/ui/test/opaQunit",\n\t\t"./pages/index"\n\t], function (opaTest) {\n\t\t"use strict";\n\n\t\tQUnit.module("Navigation Journey");\n\n\t\topaTest("Should see the initial page of the app", function (Given, When, Then) {\n\t\t\t// Arrangements\n\t\t\tGiven.iStartMyApp();\n\n\t\t\t// Assertions\n\t\t\tThen.onTheAppPage.iShouldSeeTheApp();\n\n\t\t\t//Cleanup\n\t\t\tThen.iTeardownMyApp();\n\t\t});\n\t});',"datosmaestros3/datosmaestros3/test/integration/opaTests.qunit.js":'/* global QUnit */\nQUnit.config.autostart = false;\n\nsap.ui.getCore().attachInit(function () {\n\t"use strict";\n\n\tsap.ui.require([\n\t\t"datosmaestros3/datosmaestros3/test/integration/AllJourneys"\n\t], function () {\n\t\tQUnit.start();\n\t});\n});',"datosmaestros3/datosmaestros3/test/integration/pages/index.js":'sap.ui.define([\n\t"sap/ui/test/Opa5"\n], function (Opa5) {\n\t"use strict";\n\tvar sViewName = "index";\n\tOpa5.createPageObjects({\n\t\tonTheAppPage: {\n\n\t\t\tactions: {},\n\n\t\t\tassertions: {\n\n\t\t\t\tiShouldSeeTheApp: function () {\n\t\t\t\t\treturn this.waitFor({\n\t\t\t\t\t\tid: "idAppControl",\n\t\t\t\t\t\tviewName: sViewName,\n\t\t\t\t\t\tsuccess: function () {\n\t\t\t\t\t\t\tOpa5.assert.ok(true, "The index view is displayed");\n\t\t\t\t\t\t},\n\t\t\t\t\t\terrorMessage: "Did not find the index view"\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t});\n\n});',"datosmaestros3/datosmaestros3/test/testsuite.qunit.js":'window.suite = function () {\n\t"use strict";\n\n\tvar oSuite = new parent.jsUnitTestSuite(),\n\t\tsContextPath = location.pathname.substring(0, location.pathname.lastIndexOf("/") + 1);\n\n\toSuite.addTestPage(sContextPath + "unit/unitTests.qunit.html");\n\toSuite.addTestPage(sContextPath + "integration/opaTests.qunit.html");\n\n\treturn oSuite;\n};',"datosmaestros3/datosmaestros3/test/unit/AllTests.js":'sap.ui.define([\n\t"datosmaestros3/datosmaestros3/test/unit/controller/index.controller"\n], function () {\n\t"use strict";\n});',"datosmaestros3/datosmaestros3/test/unit/controller/index.controller.js":'/*global QUnit*/\n\nsap.ui.define([\n\t"datosmaestros3/datosmaestros3/controller/index.controller"\n], function (oController) {\n\t"use strict";\n\n\tQUnit.module("index Controller");\n\n\tQUnit.test("I should test the index controller", function (assert) {\n\t\tvar oAppController = new oController();\n\t\toAppController.onInit();\n\t\tassert.ok(oAppController);\n\t});\n\n});',"datosmaestros3/datosmaestros3/test/unit/unitTests.qunit.js":'/* global QUnit */\nQUnit.config.autostart = false;\n\nsap.ui.getCore().attachInit(function () {\n\t"use strict";\n\n\tsap.ui.require([\n\t\t"datosmaestros3/datosmaestros3/test/unit/AllTests"\n\t], function () {\n\t\tQUnit.start();\n\t});\n});',
"datosmaestros3/datosmaestros3/view/index.view.js":'\r\n    sap.ui.jsview("datosmaestros3.datosmaestros3.view.index", {\r\n\r\n    /** Specifies the Controller belonging to this View. \r\n     * In the case that it is not implemented, or that "null" is returned, this View does not have a Controller.\r\n     * @memberOf controller.index\r\n     */\r\n    getControllerName: function () {\r\n        return "datosmaestros3.datosmaestros3.controller.index";\r\n    },\r\n\r\n    /** Is initially called once after the Controller has been instantiated. It is the place where the UI is constructed. \r\n     * Since the Controller is given to this method, its event handlers can be attached right away.\r\n     * @memberOf controller.index\r\n     */\r\n    createContent: function (oController) {\r\n        function logout() {\r\n            $.ajax({\r\n              "url": "/services/userapi/logout",\r\n              "success": function() {\r\n                location.reload()\r\n              },\r\n              "complete": function() {\r\n                location.reload()\r\n              }\r\n            });\r\n        }\r\n        \r\n    var TituloDeLaAplicacion = new sap.m.Label({\r\n        text : "Menú Principal",\r\n        textAlign : "Left",\r\n        design : "Bold"\r\n   })\r\n    \r\n    function isBlank (str) {\r\n      return (!str || /^\\s*$/.test(str))\r\n    };\r\n    function utoa(str) {\r\n        return window.btoa(unescape(encodeURIComponent(str)));\r\n    };\r\n    var SERVER = \'/HanaSURA2/DatosMaestrosAdmin/Maestros/service/\';\r\n    var SERVER_XSODATA = \'/HanaSURA2/DatosMaestrosAdmin/Maestros/xsodata/tables.xsodata/\';\r\n    var schema = \'\';\r\n    var schemas = [];\r\n    var keys = [];\r\n    var keysNew = [];\r\n    var records = [];\r\n    var tables = [];\r\n    var table = {};\r\n    var recordSelect = {};\r\n    var keysInput = {};\r\n    var keysInputEdict = {};\r\n    var oTextUpdate = new sap.m.Text({text:\'\'})\r\n    var oTextCreate = new sap.m.Text({text:\'\'})\r\n    var oTextCreateError = new sap.m.Text({text:\'\'})\r\n    var isLoad = false\r\n    var oDialogoErro = new sap.m.Dialog(\r\n      {title: \'Error\', icon:\'sap-icon://error\'}\r\n    ).addButton( new sap.m.Button({text: "Cerrar"}).attachPress(function(argument) {\r\n      oDialogoErro.close()\r\n    })\r\n    ).addContent(new sap.m.Text({text:\' Debe seleccionar al menos un registro para poder actualizar o eliminar. \'}))\r\n    \r\n    var oDialogoHelp = new sap.m.Dialog(\r\n      {title: \'Nuevo Registro Help\', icon:\'sap-icon://help\'}\r\n    ).addButton( new sap.m.Button({text: "Cerrar"}).attachPress(function(argument) {\r\n      oDialogoHelp.close()\r\n    })\r\n    ).addContent(new sap.m.Image({src: \'img/ayuda_crear.png\'}))\r\n    \r\n    var oDialogoHelpFull = new sap.m.Dialog(\r\n      {title: \'Help\', icon:\'sap-icon://help\'}\r\n    ).addButton( new sap.m.Button({text: "Cerrar"}).attachPress(function(argument) {\r\n      oDialogoHelpFull.close()\r\n    })\r\n    ).addContent(new sap.m.Image({src: \'img/ayuda_full.png\'}))\r\n\r\n    var oDialogoConfirm = new sap.m.Dialog(\r\n      {title: \'Confirmación\', icon:\'sap-icon://delete\'}\r\n    ).addButton( new sap.m.Button({text: "Aceptar", type: sap.m.ButtonType.Accept}).attachPress(function(argument) {\r\n      deleteRecords(false)\r\n      oDialogoConfirm.close()\r\n    })).addButton( new sap.m.Button({text: "Cerrar"}).attachPress(function(argument) {\r\n      oDialogoConfirm.close()\r\n    })).addContent(new sap.m.Text({text:\' ¿Está seguro de eliminar los registros seleccionados?. \'}))\r\n    \r\n    var oDialogoSuccessUpload = new sap.m.Dialog(\r\n      {title: \'Actualizado\', icon:\'sap-icon://save\'}\r\n    ).addButton( new sap.m.Button({text: "Cerrar"}).attachPress(function(argument) {\r\n      oDialogoSuccessUpload.close()\r\n    })\r\n    ).addContent(oTextUpdate)\r\n    \r\n    var oDialogoSuccessCreate = new sap.m.Dialog(\r\n      {title: \'Creado\', icon:\'sap-icon://add\'}\r\n    ).addButton( new sap.m.Button({text: "Cerrar"}).attachPress(function(argument) {\r\n      oDialogoSuccessCreate.close()\r\n    })\r\n    ).addContent(oTextCreate)\r\n    \r\n    var oDialogoErroCantAccion = new sap.m.Dialog(\r\n      {title: \'Error\', icon:\'sap-icon://error\'}\r\n    ).addButton( new sap.m.Button({text: "Cerrar"}).attachPress(function(argument) {\r\n      oDialogoErroCantAccion.close()\r\n    })\r\n    ).addContent(oTextCreateError)\r\n    \r\n    var oDialogoErroSelectSchemaTableUser = new sap.m.Dialog(\r\n      {title: \'Error\', icon:\'sap-icon://error\'}\r\n    ).addButton( new sap.m.Button({text: "Cerrar"}).attachPress(function(argument) {\r\n      oDialogoErroSelectSchemaTableUser.close()\r\n    })\r\n    ).addContent(new sap.m.Text({text:\' Debe seleccionar un esquema, tabla y usuario para agregar o actualizar permisos. \'}))\r\n    \r\n    var oTable = new sap.ui.table.Table();\r\n    var oTableNew = new sap.ui.table.Table();\r\n    var oGridinputbottom = new sap.ui.layout.Grid({defaultSpan:"L1 M2 S2"});\r\n    var nameTableInput = new sap.m.Input();\r\n    var nameTableLabel = new sap.ui.commons.Label({text: "Nombre de la Tabla"}).setLabelFor(nameTableInput);\r\n    var canUpdate = new sap.m.CheckBox({text:"Se Pueden Editar los Registros"});\r\n    var canDelete = new sap.m.CheckBox({text:"Se Pueden Eliminar los Registros"});\r\n    var canAdd = new sap.m.CheckBox({text:"Se Pueden Agregar los Registros"});\r\n    var oGridBeforeHeader = new sap.ui.layout.Grid(\'oGridBeforeHeader\',{defaultSpan:"L12 M12 S12"});\r\n    var oGridIndexBody = new sap.ui.layout.Grid(\'oGridIndexBody\',{defaultSpan:"L12 M12 S12"});\r\n    var oGridBodyFull = new sap.ui.layout.Grid({defaultSpan:"L12 M12 S12"});\r\n    var oGridinputCheckBox = new sap.ui.layout.Grid({defaultSpan:"L4 M6 S12"});\r\n    var oButtonAddOUpdate = new sap.m.Button({text: "Agregar o Actualizar Permisos", type: sap.m.ButtonType.Accept});\r\n    oButtonAddOUpdate.attachPress({}, function() {\r\n      addOUpdatePermiso()\r\n    });\r\n    var oCheckBoxAddRecord = new sap.m.CheckBox({text: "Puede Agregar"});\r\n    var oCheckBoxUpdateRecord = new sap.m.CheckBox({text: "Puede Actualizar"});\r\n    var oCheckBoxDeleteRecord = new sap.m.CheckBox({text: "Puede Eliminar"});\r\n    var oGridHeader = new sap.ui.layout.Grid(\'oGridHeader\',{defaultSpan:"L6 M6 S12"});\r\n    var oGridBody = new sap.ui.layout.Grid(\'oGridBody\',{defaultSpan:"L12 M12 S12"});\r\n    var oGridBottonEdit = new sap.ui.layout.Grid({defaultSpan:"L6 M6 S12"});\r\n    var oTableUserName =  new sap.m.Text()\r\n    var oTextDeleteRecord =  new sap.m.Text({text:\'\'})\r\n    var oTextUpdateRecord =  new sap.m.Text({text:\'\'})\r\n\r\n    var user = {};\r\n    var isAdmin = false;\r\n    var UserTables = [];\r\n    var oInputSimpleTable = new sap.m.Select("seleteSimpleTable", {name: "Table"});\r\n    var oInputSimpleTableLabel = new sap.ui.commons.Label({text: "Tabla"}).setLabelFor(oInputSimpleTable);\r\n    var itemSelectSimpleTable = new sap.ui.core.Item({key: "0", text: "Seleccione una Tabla"});\r\n    oInputSimpleTable.attachChange({}, function() {\r\n        if (oInputSimpleTable.getSelectedItem().getKey() !== \'0\') {\r\n            tables.map(function(tableSimple) {\r\n              if (String(tableSimple.ID) === oInputSimpleTable.getSelectedItem().getKey()) {\r\n                table = tableSimple\r\n                getKeysTables(tableSimple, false)\r\n                oGridBody.removeAllContent()\r\n              }\r\n            })\r\n        } else {\r\n          oGridBody.removeAllContent()\r\n        }\r\n    });\r\n    var oButtonDeleteRecordUserPermisie = new sap.m.Button({icon:\'sap-icon://delete\'});\r\n    oButtonDeleteRecordUserPermisie.attachPress({}, function() {\r\n      deleteRecords(true)\r\n    });   \r\n    var oBarNewTable = new sap.m.Bar( {\r\n        contentLeft : [new sap.m.Button({icon: \'sap-icon://sys-help\'}).attachPress(function(argument) {\r\n          oDialogoErroSelectSchemaTableUser.close()\r\n        }) ],\r\n       contentMiddle : [ oTableUserName ],\r\n       contentRight : [oButtonDeleteRecordUserPermisie]\r\n    });\r\n    var oTableUserTables = new sap.ui.table.Table({\r\n        title: oBarNewTable,                                   // Displayed as the heading of the table\r\n        enableColumnReordering:true,       // Allows you to drag and drop the column and reorder the position of the column\r\n        width:"100%"                              // width of the table\r\n      }).addColumn(new sap.ui.table.Column({\r\n          width: "350px",\r\n          label: new sap.m.Label({text: "Usuarios"}),             // Creates an Header with value defined for the text attribute\r\n          template: new sap.m.Text().bindProperty("text", "USER"), // binds the value into the text field defined using JSON\r\n          sortProperty: "USER",        // enables sorting on the column\r\n          filterProperty: "USER",       // enables set filter on the column\r\n        })).addColumn(new sap.ui.table.Column({\r\n            width: "200px",\r\n          label: new sap.m.Label({text: "Nombre de Esquema"}),             // Creates an Header with value defined for the text attribute\r\n          template: new sap.m.Text().bindProperty("text", "SCHEMA_NAME"), // binds the value into the text field defined using JSON\r\n          sortProperty: "SCHEMA_NAME",        // enables sorting on the column\r\n          filterProperty: "SCHEMA_NAME",       // enables set filter on the column\r\n        })).addColumn(new sap.ui.table.Column({\r\n            width: "200px",\r\n          label: new sap.ui.commons.Label({text: "Nombre de Tabla"}),             // Creates an Header with value defined for the text attribute\r\n          template: new sap.m.Text().bindProperty("text", "LABEL"), // binds the value into the text field defined using JSON\r\n          sortProperty: "LABEL",        // enables sorting on the column\r\n          filterProperty: "LABEL",       // enables set filter on the column\r\n        })).addColumn(new sap.ui.table.Column({\r\n            width: "110px",\r\n          label: new sap.m.Label({text: "Puede Aregar"}),             // Creates an Header with value defined for the text attribute\r\n          template: new sap.m.Text().bindProperty("text", "CAN_ADD"), // binds the value into the text field defined using JSON\r\n          sortProperty: "CAN_ADD",        // enables sorting on the column\r\n          filterProperty: "CAN_ADD",       // enables set filter on the column\r\n        })).addColumn(new sap.ui.table.Column({\r\n            width: "125px",\r\n          label: new sap.m.Label({text: "Puede Actualizar"}),             // Creates an Header with value defined for the text attribute\r\n          template: new sap.m.Text().bindProperty("text", "CAN_UPDATE"), // binds the value into the text field defined using JSON\r\n          sortProperty: "CAN_UPDATE",        // enables sorting on the column\r\n          filterProperty: "CAN_UPDATE",       // enables set filter on the column\r\n        })).addColumn(new sap.ui.table.Column({\r\n            width: "120px",\r\n          label: new sap.m.Label({text: "Puede Eliminar"}),             // Creates an Header with value defined for the text attribute\r\n          template: new sap.m.Text().bindProperty("text", "CAN_DELETE"), // binds the value into the text field defined using JSON\r\n          sortProperty: "CAN_DELETE",        // enables sorting on the column\r\n          filterProperty: "CAN_DELETE",       // enables set filter on the column\r\n        }));\r\n\r\n    function createdSelectSimpleTable(data) {\r\n        oInputSimpleTable.removeAllItems();\r\n        oSideBar.destroyItems()\r\n        oInputSimpleTable.addItem(itemSelectSimpleTable);\r\n        data.map(function(item){\r\n            oInputSimpleTable.addItem(new sap.ui.core.Item({key: item.ID, text: item.SCHEMA_NAME + \': \' + ((item.LABEL && !isBlank(item.LABEL)) && item.LABEL != \'null\' ? item.LABEL : item.NAME )}));\r\n            oSideBar.addItem(new sap.ui.core.Item({key: item.ID, text: item.SCHEMA_NAME + \': \' + ((item.LABEL && !isBlank(item.LABEL)) && item.LABEL != \'null\' ? item.LABEL : item.NAME )}))\r\n        })\r\n    };\r\n    function getUser(){\r\n        oGridHeader.removeAllContent();\r\n        oGridBody.removeAllContent();\r\n        $.ajax({\r\n          "url": "/services/userapi/currentUser",\r\n          "success": function(data) {\r\n            user = data\r\n            getAdminStar(data)\r\n          },\r\n          "complete": function() {\r\n            //location.reload()\r\n          }\r\n        });\r\n    };\r\n    function getAdmin(userQ){\r\n        $.ajax({\r\n          "url": SERVER + "getUserPermise.xsjs/?username="+userQ.name.toUpperCase(),\r\n          "success": function(data) {\r\n            responseJson = JSON.parse(data);\r\n            TituloDeLaAplicacion.setText("Administrador de Datos Maestros")\r\n            OFullConten.setShowSideContent( true )\r\n            oButtonTogglesSideBar.setText(\'Ocultar Tablas\' )\r\n            oBar.removeAllContentLeft()\r\n            oBar.addContentLeft(oButtonBack)\r\n            oBar.addContentLeft(oButtonTogglesSideBar)\r\n            tables = responseJson.records\r\n            oGridBeforeHeader.removeAllContent()\r\n            oGridHeader.removeAllContent();\r\n            oGridBody.removeAllContent();\r\n            createdSelectSimpleTable(responseJson.records);\r\n            isAdmin = responseJson.isAdmin;\r\n            oInputSimpleTable.setSelectedKey(\'0\')\r\n            oGridIndexBody.removeAllContent()\r\n          },\r\n          "error": function(){\r\n            logout()\r\n          },\r\n          "complete": function() {\r\n            //location.reload()\r\n          }\r\n        });\r\n    };\r\n\r\n    function getAdminStar(userQ){\r\n        $.ajax({\r\n            headers: {\r\n            \'Accept\': \'application/json\',\r\n            \'Content-Type\': \'application/json\',\r\n          },\r\n          "url": SERVER + "getUserPermise.xsjs/?username="+userQ.name.toUpperCase(),\r\n          "success": function(data) {\r\n            isAdmin = JSON.parse(data).isAdmin;\r\n            if (isAdmin) {\r\n                BodyInt()\r\n                oButtonUserPermises.setEnabled(true)\r\n                oButtonPermisosEtl.setEnabled(true)\r\n                oButtonDatosMaestros.setEnabled(true)\r\n                oButtonValidacionesDeCarga.setEnabled(true)\r\n            } else {\r\n                monitoreView()\r\n            }\r\n          },\r\n          "complete": function() {\r\n            //location.reload()\r\n          }\r\n        });\r\n    };\r\n    function addOUpdatePermiso(){\r\n      if (oInputSchema.getSelectedItem().getKey() !== \'0\' && oInput.getSelectedItem().getKey() !== \'0\' && !isBlank(oSearchField.getValue())) {\r\n        $.ajax({\r\n          "url": SERVER + "updatePermise.xsjs/",\r\n          contentType: "application/json; charset=utf-8",\r\n          dataType: "json",\r\n          type: "POST",\r\n          "data": JSON.stringify({\r\n            user: oSearchField.getValue().toUpperCase(),\r\n            schema: oInputSchema.getSelectedItem().getKey(),\r\n            table: oInput.getSelectedItem().getKey(),\r\n            canDelete: oCheckBoxDeleteRecord.getSelected() ? \'SI\' : \'NO\',\r\n            canAdd: oCheckBoxAddRecord.getSelected() ? \'SI\' : \'NO\',\r\n            canUpdate: oCheckBoxUpdateRecord.getSelected() ? \'SI\' : \'NO\',\r\n          }),\r\n          "success": function(data) {\r\n            var responseJson = {}\r\n            if (typeof(data) == \'String\') {\r\n              responseJson = JSON.parse(data);\r\n            } else {\r\n              responseJson = data  \r\n            }\r\n            getUserTablesQuery(oSearchField.getValue());\r\n            oInputSchema.setSelectedKey(\'0\')\r\n            oInput.setSelectedKey(\'0\')\r\n            createdSelect([])\r\n          },\r\n          "error": function(){\r\n            logout()\r\n          },\r\n          "complete": function() {\r\n            //location.reload()\r\n          }\r\n        });\r\n      } else {\r\n        oDialogoErroSelectSchemaTableUser.open()\r\n      }\r\n    };\r\n    function getUserTablesQuery(userQ){\r\n        $.ajax({\r\n          "url": SERVER + (isBlank(userQ) ? \'getUserPermise.xsjs/?username=ALL\' : "getUserPermise.xsjs/?username="+userQ.toUpperCase()),\r\n          "success": function(data) {\r\n            responseJson = JSON.parse(data);\r\n            oGridBody.removeAllContent()\r\n            oGridBody.addContent(oTableUserTables)\r\n            var oModel = new sap.ui.model.json.JSONModel();        // created a JSON model      \r\n\r\n            oModel.setData({modelData: responseJson.records});                              // Set the data to the model using the JSON object defined already\r\n\r\n            oTableUserTables.setModel(oModel);                                                                                  \r\n\r\n            oTableUserTables.bindRows("/modelData");\r\n          },\r\n          "error": function(){\r\n            logout()\r\n          },\r\n          "complete": function() {\r\n            //location.reload()\r\n          }\r\n        });\r\n    }\r\n    getUser()\r\n    var oSearchField = new sap.m.SearchField({placeholder: "Usuario"}).attachSearch(function(event, data) {\r\n      if (TituloDeLaAplicacion.getText() != \'Administrador de Permisos Datos Maestros\') {\r\n          getFilialByUser(oSearchField.getValue()); \r\n      } else {\r\n          getUserTablesQuery(oSearchField.getValue());\r\n          oTableUserName.setText(\'Permisos Del Usuario: \' + oSearchField.getValue().toUpperCase() )\r\n      }\r\n      //getUserPermise(user)\r\n    });\r\n    function AddUserScream() {\r\n      TituloDeLaAplicacion.setText("Administrador de Permisos Datos Maestros")\r\n      oGridBeforeHeader.removeAllContent()\r\n      oGridHeader.removeAllContent()\r\n      oGridBody.removeAllContent()\r\n      oGridinputCheckBox.removeAllContent()\r\n      getSchema()\r\n      oGridBeforeHeader.addContent(oSearchField)\r\n      oGridHeader.addContent(oGridinputSchema)\r\n      oGridHeader.addContent(oGridinput)\r\n      oGridHeader.addContent(oGridinputCheckBox)\r\n      oInput.setSelectedKey(\'0\')\r\n      oInputSchema.setSelectedKey(\'0\')\r\n      oBar.removeAllContentLeft()\r\n      oBar.addContentLeft(oButtonBack)\r\n      getUserTablesQuery(\'\')\r\n      oGridIndexBody.removeAllContent()\r\n    }\r\n    // Input Table\r\n    var oInput = new sap.m.Select("seleteTable", {name: "Table", width: "100%"})\r\n    var oInputLabel = new sap.ui.commons.Label({text: "Tabla"}).setLabelFor(oInput)\r\n    var itemSelectTable = new sap.ui.core.Item({key: "0", text: "Seleccione una Tabla"})\r\n    oInput.attachChange({}, function() {\r\n        if (oInput.getSelectedItem().getKey() !== \'0\') {\r\n            tables.map(function(tableSimple) {\r\n              if (tableSimple.NAME === oInput.getSelectedItem().getKey()) {\r\n                table = {...tableSimple, "SCHEMA_NAME": schema}\r\n                getKeysTables({...tableSimple, "SCHEMA_NAME": schema}, true)\r\n              }\r\n            })\r\n        }\r\n    });\r\n    function createdSelect(data) {\r\n        oInput.removeAllItems()\r\n        oInput.addItem(itemSelectTable);\r\n        data.map(function(item){\r\n            oInput.addItem(new sap.ui.core.Item({key: item.NAME, text: item.LABEL && !isBlank(item.LABEL) && item.LABEL != \'null\' ? item.LABEL : item.NAME }));\r\n        })\r\n    }\r\n    var oGridinput = new sap.ui.layout.Grid({defaultSpan:"L12 M12 S12"}).addContent(oInputLabel).addContent(oInput)\r\n    function getTables(){\r\n        $.ajax({\r\n          "url": SERVER+\'getTables.xsjs/?schema=\'+schema,\r\n          "success": function(data) {\r\n            responseJson = JSON.parse(data);\r\n            createdSelect(responseJson)\r\n            tables = responseJson\r\n          },\r\n          "error": function(){\r\n            logout()\r\n          },\r\n          "complete": function() {\r\n            //location.reload()\r\n          }\r\n        });\r\n    }\r\n    // Input Schema\r\n    var oInputSchema = new sap.m.Select("seleteSchema", {name: "Esquema", width: "100%"})\r\n    var oInputSchemaLabel = new sap.ui.commons.Label({text: "Esquema"}).setLabelFor(oInputSchema)\r\n    oInputSchema.attachChange({}, function() {\r\n      oInput.setSelectedKey(\'N\')\r\n      if (oInputSchema.getSelectedItem().getKey() !== \'0\') {\r\n          schema = oInputSchema.getSelectedItem().getKey()\r\n          getTables()\r\n      }\r\n    });\r\n    function createdSelectSchema(data) {\r\n        oInputSchema.removeAllItems()\r\n        oInputSchema.addItem(itemSelectSchema);\r\n        data.map(function(item){\r\n            oInputSchema.addItem(new sap.ui.core.Item({key: item, text: item}));\r\n        })\r\n    }\r\n    var itemSelectSchema = new sap.ui.core.Item({key: "0", text: "Seleccione un Esquema"})\r\n    var oGridinputSchema = new sap.ui.layout.Grid({defaultSpan:"L12 M12 S12"}).addContent(oInputSchemaLabel).addContent(oInputSchema)\r\n    function getSchema(){\r\n        $.ajax({\r\n          "url": SERVER+\'getSchema.xsjs\',\r\n          "success": function(data) {\r\n            responseJson = JSON.parse(data);\r\n            createdSelectSchema(responseJson)\r\n            createdSelect([])\r\n            schemas = responseJson\r\n          },\r\n          "error": function(){\r\n            logout()\r\n          },\r\n          "complete": function() {\r\n            //location.reload()\r\n          }\r\n        });\r\n    }\r\n    \r\n\r\n\r\n    var deleteButton = new sap.m.Button({text: "Remover tabla de dato maestro", width: "100%"}).attachPress({}, function (argument) {\r\n      if (oInput.getSelectedItem().getKey() !== \'0\') {\r\n        removeTable(oInput.getSelectedItem().getKey())\r\n      }\r\n    })\r\n\r\n    //Create Table\r\n    function createdTable(table, data) {\r\n        var dicc = {}\r\n        table.visibleKeys.map(function (key){\r\n          dicc[key.name] = \'\'\r\n        })\r\n        var newRecordRT = [dicc]\r\n        oTable.destroy()\r\n        oGridBody.removeAllContent()\r\n        var oBarTable = new sap.m.Bar( {\r\n            contentLeft : [new sap.m.Button({icon: \'sap-icon://sys-help\'}).attachPress(function(argument) {\r\n              oDialogoHelpFull.open()\r\n            }) ],\r\n           contentMiddle : [ new sap.m.Text({text: table.LABEL}) ],\r\n           contentRight : [],\r\n           translucent: true\r\n        });\r\n        oTable = new sap.ui.table.Table({\r\n            title: oBarTable,                                   // Displayed as the heading of the table\r\n            footer: "Total Registros: " + data.length,                                   // Displayed as the heading of the table\r\n            showColumnVisibilityMenu: true,\r\n            selectionMode: (String(table.CAN_UPDATE) === \'NO\' && String(table.CAN_DELETE) === \'NO\') ? sap.ui.table.SelectionMode.None : sap.ui.table.SelectionMode.MultiToggle,                                   // Displayed as the heading of the table\r\n            enableColumnReordering:true,       // Allows you to drag and drop the column and reorder the position of the column\r\n            width:"100%"                              // width of the table\r\n          });\r\n        table.visibleKeys.map(function(visibleKey){\r\n          oTable.addColumn(new sap.ui.table.Column({\r\n              width: "125px",\r\n            label: new sap.ui.commons.Label({text: visibleKey.label ? visibleKey.label : visibleKey.name, icon: table.PKS.indexOf(visibleKey.name) > -1 ? \'sap-icon://key\' : \'\'}),             // Creates an Header with value defined for the text attribute\r\n            template: String(table.CAN_UPDATE) === \'SI\' && table.PKS.indexOf(visibleKey.name) == -1 ? new sap.ui.commons.TextField().bindProperty("value", visibleKey.name) : new sap.m.Text().bindProperty("text", visibleKey.name), // binds the value into the text field defined using JSON\r\n            sortProperty: visibleKey.name,        // enables sorting on the column\r\n            filterProperty: visibleKey.name,       // enables set filter on the column\r\n          }));\r\n        })\r\n\r\n        var oModel = new sap.ui.model.json.JSONModel();        // created a JSON model      \r\n\r\n        oModel.setData({modelData: data});                              // Set the data to the model using the JSON object defined already\r\n\r\n        oTable.setModel(oModel);                                                                                  \r\n\r\n        oTable.bindRows("/modelData");                              // binding all the rows into the model\r\n\r\n        oTable.sort(oTable.getColumns()[0]);\r\n\r\n        oTableNew.destroy()\r\n        var oBarNewTable = new sap.m.Bar( {\r\n            contentLeft : [new sap.m.Button({icon: \'sap-icon://sys-help\'}).attachPress(function(argument) {\r\n              oDialogoHelp.open()\r\n            }) ],\r\n           contentMiddle : [ new sap.m.Text({text: "Nuevo Registro"}) ],\r\n           contentRight : [],\r\n           translucent: true\r\n        });\r\n        oTableNew = new sap.ui.table.Table({\r\n            title: oBarNewTable,                                   // Displayed as the heading of the table\r\n            selectionMode: \'None\',\r\n            visibleRowCount: 1,\r\n            enableColumnReordering:true,       // Allows you to drag and drop the column and reorder the position of the column\r\n            width:"100%"                              // width of the table\r\n          });\r\n        table.visibleKeys.map(function(visibleKey, index){\r\n          oTableNew.addColumn(new sap.ui.table.Column({\r\n              width: "125px",\r\n            label: new sap.ui.commons.Label({text: visibleKey.label, icon: table.PKS.indexOf(visibleKey.name) > -1 ? \'sap-icon://key\' : \'\'}),             // Creates an Header with value defined for the text attribute\r\n            template: new sap.ui.commons.TextField().bindProperty("value", visibleKey.name), // binds the value into the text field defined using JSON\r\n            sortProperty: visibleKey.name,        // enables sorting on the column\r\n            filterProperty: visibleKey.name,       // enables set filter on the column\r\n          }));\r\n        })\r\n\r\n        var oModel = new sap.ui.model.json.JSONModel();        // created a JSON model      \r\n\r\n        oModel.setData({modelData: newRecordRT});                              // Set the data to the model using the JSON object defined already\r\n\r\n        oTableNew.setModel(oModel);                                                                                  \r\n\r\n        oTableNew.bindRows("/modelData");                              // binding all the rows into the model\r\n\r\n        if (String(table.CAN_ADD) === \'SI\') {\r\n          oGridBody.addContent(oTableNew)\r\n        }\r\n        var oButtonAddRecord = new sap.m.Button({icon:\'sap-icon://add\'});\r\n        oButtonAddRecord.attachPress({}, function() {\r\n          createDataMaster()\r\n        });\r\n        oGridinputbottom.removeAllContent()\r\n        if (String(table.CAN_ADD) === \'SI\') {\r\n          oBarNewTable.addContentRight(oButtonAddRecord)\r\n        }\r\n        oGridBody.addContent(oTable)\r\n        var oButtonDeleteRecord = new sap.m.Button({icon:\'sap-icon://delete\'});\r\n        oButtonDeleteRecord.attachPress({}, function() {\r\n          var arrayIndex = oTable.getSelectedIndices()\r\n          if (arrayIndex.length > 0) {\r\n            oDialogoConfirm.open()\r\n          } else {\r\n            oDialogoErro.open()\r\n          }          \r\n        });\r\n        var oButtonUpdateRecord = new sap.m.Button({icon:\'sap-icon://save\'});\r\n        oButtonUpdateRecord.attachPress({}, function() {\r\n          updateRecords()\r\n        });\r\n        if (String(table.CAN_UPDATE) === \'SI\') {\r\n          oBarTable.addContentRight(oButtonUpdateRecord)\r\n        }\r\n        if (String(table.CAN_DELETE) === \'SI\') {\r\n          oBarTable.addContentRight(oButtonDeleteRecord)\r\n        }\r\n        oGridBody.addContent(oGridinputbottom)\r\n    }\r\n\r\n    function getKeysTables(table, needRecords){\r\n        $.ajax({\r\n          contentType: "application/json; charset=utf-8",\r\n          dataType: "json",\r\n          type: "POST",\r\n          "url": SERVER+\'queryAnyTable.xsjs/\',\r\n          "data": JSON.stringify({\r\n            table: table.NAME,\r\n            schema: table.SCHEMA_NAME,\r\n            noNeedRecords: needRecords \r\n          }),\r\n          "success": function(data) {\r\n            var responseJson = {}\r\n            if (typeof(data) == \'String\') {\r\n              responseJson = JSON.parse(data);\r\n            } else {\r\n              responseJson = data  \r\n            }\r\n            table = {...table, visibleKeys: responseJson.keys, privilege: responseJson.privilege} \r\n            if (!needRecords) {\r\n              createdTable(table, responseJson.records)\r\n            } else {\r\n              oGridinputCheckBox.removeAllContent()\r\n              oGridHeader.addContent(oButtonAddOUpdate)\r\n              if (table.privilege.indexOf(\'INSERT\') > -1) {\r\n                oGridinputCheckBox.addContent(oCheckBoxAddRecord)\r\n              }\r\n              if (table.privilege.indexOf(\'UPDATE\') > -1) {\r\n                oGridinputCheckBox.addContent(oCheckBoxUpdateRecord)\r\n              }\r\n              if (table.privilege.indexOf(\'DELETE\') > -1) {\r\n                oGridinputCheckBox.addContent(oCheckBoxDeleteRecord)\r\n              }\r\n\r\n            }\r\n            keys = responseJson.keys\r\n            records = responseJson.records\r\n          },\r\n          "error": function(){\r\n            logout()\r\n          },\r\n          "complete": function() {\r\n            //location.reload()\r\n          }\r\n        });\r\n    }\r\n\r\n    function getKeysNewTables(){\r\n      $.ajax({\r\n          "url": SERVER+\'getAnyTableKeys.xsjs/\',\r\n          contentType: "application/json; charset=utf-8",\r\n          dataType: "json",\r\n          type: "POST",\r\n          "data": JSON.stringify({\r\n            table: inputNAME.getValue(),\r\n            schema \r\n          }),\r\n          "success": function(data) {\r\n            var responseJson = {}\r\n            if (typeof(data) == \'String\') {\r\n              responseJson = JSON.parse(data);\r\n            } else {\r\n              responseJson = data  \r\n            }\r\n            if (!responseJson.error) {\r\n              keysNew = responseJson.keys\r\n              createdNewTableKeys(responseJson.keys)\r\n            } else {\r\n              alert(responseJson.message)\r\n            }\r\n          },\r\n          "error": function(){\r\n            logout()\r\n          },\r\n          "complete": function() {\r\n            //location.reload()\r\n          }\r\n        });\r\n    }\r\n\r\n    function deleteRecords(isRecords){\r\n        var arrayIndex = isRecords ? oTableUserTables.getSelectedIndices() : oTable.getSelectedIndices()\r\n        if (arrayIndex.length > 0) {\r\n          var values = []\r\n          arrayIndex.map(function(indexRow) {\r\n            var keysForDelete = getKeysTablesFromRows(indexRow, (isRecords ? oTableUserTables : oTable))\r\n            keysForDelete.map(function(keyForDelete) {\r\n              if (keyForDelete.name === table.PK || (isRecords && keyForDelete.name === \'ID\')) {\r\n                values.push(keyForDelete.value)\r\n              }\r\n            })\r\n            if (true) {\r\n\r\n              $.ajax({\r\n                  "url": SERVER+\'deleteAnyTableNew.xsjs/\',\r\n                  contentType: "application/json; charset=utf-8",\r\n                  dataType: "json",\r\n                  type: "POST",\r\n                  "data": JSON.stringify({\r\n                    pk: {name: isRecords ? \'ID\' : table.PK, value: values},\r\n                    keys: keysForDelete,\r\n                    table: isRecords ? \'TABLES\' : table.NAME,\r\n                    schema: isRecords ? \'DATO_MAESTRO_ADMIN\' : table.SCHEMA_NAME \r\n                  }),\r\n                  "success": function(data) {\r\n                    var responseJson = {}\r\n                    if (typeof(data) == \'String\') {\r\n                      responseJson = JSON.parse(data);\r\n                    } else {\r\n                      responseJson = data  \r\n                    }\r\n                    if (responseJson.error) {\r\n                      oTextCreateError.setText(\'Los registros no se actualizaron por el siguiente error: \' + responseJson.TrueMessage.es)\r\n                      oDialogoErroCantAccion.open()\r\n                    } else {\r\n                      if (isRecords) {\r\n                        getUserTablesQuery(oSearchField.getValue());\r\n                      } else {\r\n                        getKeysTables(table, false)\r\n                      }\r\n                    }\r\n                  },\r\n                  "error": function(){\r\n                    logout()\r\n                  },\r\n                  "complete": function() {\r\n                    //location.reload()\r\n                  }\r\n                });\r\n            }\r\n          })\r\n        } else {\r\n          oDialogoErro.open()\r\n        }\r\n    }\r\n\r\n    function updateRecords(){\r\n      var arrayIndex = oTable.getSelectedIndices()\r\n      var updateRecords = 0\r\n      var failUpdateRecords = 0\r\n      var ErrorList = []\r\n      if (arrayIndex.length > 0) {\r\n        arrayIndex.map(function(indexRow, index) {\r\n          var pk = \'\'\r\n          var keysForDelete = getKeysTablesFromRows(indexRow, oTable)\r\n          keysForDelete.map(function(keyForDelete) {\r\n            if (keyForDelete.name === table.PK) {\r\n              pk=keyForDelete.value\r\n            }\r\n          })\r\n          $.ajax({\r\n            "url": SERVER+\'updateAnyTable.xsjs/\',\r\n            contentType: "application/json; charset=utf-8",\r\n            dataType: "json",\r\n            type: "POST",\r\n            "data": JSON.stringify({\r\n              keys: keysForDelete,\r\n              pk: {name:table.PK, value: pk},\r\n              table: table.NAME,\r\n              schema: table.SCHEMA_NAME \r\n            }),\r\n            "success": function(data) {\r\n              var responseJson = {}\r\n              if (typeof(data) == \'String\') {\r\n                responseJson = JSON.parse(data);\r\n              } else {\r\n                responseJson = data  \r\n              }\r\n              if (responseJson.error) {\r\n                failUpdateRecords = failUpdateRecords + 1\r\n                ErrorList.push({...responseJson, keysForDelete, pk})\r\n              } else {\r\n                updateRecords = updateRecords + 1\r\n              }\r\n              if ((index + 1) == (arrayIndex.length)) {\r\n                var finalText = \'Registros actualizados: \' + updateRecords + \', falló registros actualizados: \' + failUpdateRecords + \' \';\r\n                ErrorList.map(function(item, index) {\r\n                  finalText = finalText + " \\n " + "El registro con el "+table.PK+": " + item.pk + ", no se pudo actualizar por: " + item.TrueMessage.es;\r\n                })\r\n                oTextUpdate.setText(finalText)\r\n                oDialogoSuccessUpload.open()\r\n                getKeysTables(table, false)\r\n              }\r\n            },\r\n            "error": function(){\r\n              logout()\r\n            },\r\n            "complete": function() {\r\n              //location.reload()\r\n            }\r\n          });\r\n        })\r\n      } else {\r\n        oDialogoErro.open()\r\n      }\r\n    }\r\n\r\n    function getKeysTablesFromRows(indexRow, tableSAP) {\r\n        var cells\r\n        try {\r\n          cells = tableSAP.getModel().oData.modelData[tableSAP.getModel().aBindings[tableSAP.getModel().aBindings.length-1].aIndices[indexRow]]\r\n        }\r\n        catch(err) {\r\n          cells = tableSAP.getModel().oData.modelData[tableSAP.getModel().aBindings[0].aIndices[indexRow]]\r\n        }\r\n            var keysNewRecord = []\r\n      Object.keys(cells).map(function(cell) {\r\n        if (!isBlank(cells[cell])) {\r\n          keysNewRecord.push({\r\n            name: cell,\r\n            value: cells[cell]\r\n          })\r\n        }\r\n      })\r\n      return keysNewRecord\r\n    }\r\n\r\n    function getKeysTablesFromRowsText(indexRow, tableSAP) {\r\n      try {\r\n          return tableSAP.getModel().oData.modelData[tableSAP.getModel().aBindings[tableSAP.getModel().aBindings.length-1].aIndices[indexRow]]\r\n        }\r\n        catch(err) {\r\n          return tableSAP.getModel().oData.modelData[tableSAP.getModel().aBindings[0].aIndices[indexRow]]\r\n        }\r\n    }\r\n\r\n    function createDataMaster() {\r\n      $.ajax({\r\n        "url": SERVER+\'insertAnyTable.xsjs/\',\r\n        contentType: "application/json; charset=utf-8",\r\n        dataType: "json",\r\n        type: "POST",\r\n        "data": JSON.stringify({\r\n          keys: getKeysTablesFromRows(0, oTableNew),\r\n          name: table.NAME,\r\n          schema: table.SCHEMA_NAME \r\n        }),\r\n        "success": function(data) {\r\n          var responseJson = {}\r\n          if (typeof(data) == \'String\') {\r\n            responseJson = JSON.parse(data);\r\n          } else {\r\n            responseJson = data  \r\n          }\r\n          if (responseJson.error) {\r\n            oTextCreateError.setText(\'El registro no se pudo crear por: \' + responseJson.TrueMessage.es)\r\n            oDialogoErroCantAccion.open()\r\n          } else {\r\n            oTextCreate.setText(\' Registros Creados \')\r\n            oDialogoSuccessCreate.open()\r\n            getKeysTables(table, false)\r\n          }\r\n        },\r\n        "error": function(){\r\n          logout()\r\n        },\r\n        "complete": function() {\r\n          //location.reload()\r\n        }\r\n      });\r\n    }\r\n    /*\r\n      getSchema()\r\n      oGridHeader.addContent(oGridinputSchema)\r\n      oGridHeader.addContent(oGridinput)\r\n    */\r\n    var oButtonTogglesSideBar = new sap.m.Button({icon:\'sap-icon://menu2\', text: \'Ocultal Tablas\'}).attachPress({}, function() {\r\n      var open = OFullConten.getShowSideContent()\r\n      OFullConten.setShowSideContent( !open )\r\n      oButtonTogglesSideBar.setText(open ? \'Mostrar Tablas\' : \'Ocultar Tablas\' )\r\n    });\r\n    var oButtonBack = new sap.m.Button({icon:\'sap-icon://close-command-field\'}).attachPress({}, function() {\r\n      BodyInt()\r\n    });\r\n    var oBar = new sap.m.Bar( \'barraPrincipal\', {\r\n       contentLeft : [],\r\n       contentMiddle : [ TituloDeLaAplicacion ],\r\n       contentRight : [new sap.ui.commons.Image( {\r\n        src : "https://www.epssura.com/images/logo_sura.png",\r\n        height : "45px"\r\n       })]\r\n    });\r\n    var oSideBar = new sap.m.SelectList().attachSelectionChange({}, function() {\r\n        if (oSideBar.getSelectedItem().getKey() !== \'0\') {\r\n            tables.map(function(tableSimple) {\r\n              if (String(tableSimple.ID) === oSideBar.getSelectedItem().getKey()) {\r\n                table = tableSimple\r\n                getKeysTables(tableSimple, false)\r\n                oGridBody.removeAllContent()\r\n                OFullConten.setShowSideContent( false )\r\n                oButtonTogglesSideBar.setText(\'Mostrar Tablas\')\r\n              }\r\n            })\r\n        } else {\r\n          oGridBody.removeAllContent()\r\n        }\r\n    })\r\n    const SERVER_MONITOR = \'/HanaSURA2/DatosMaestrosAdmin/monitor/\';\r\nvar oInputFlowgraph = new sap.m.Select("seleteFlowgraph", {name: "Flowgraph", width: "100%"})\r\nvar itemSelect = new sap.ui.core.Item({key: "0", text: "Seleccione una ETL"});\r\noInputFlowgraph.attachChange({}, function() {\r\n    if (oInputFlowgraph.getSelectedItem().getKey() !== \'0\') {\r\n        getJustLogs(oInputFlowgraph.getSelectedItem().getKey())\r\n      if (TituloDeLaAplicacion.getText() == \'Validaciones ETL\') {\r\n          getFilialByUser(oSearchField.getValue()); \r\n      }\r\n    }\r\n\r\n});\r\nvar oInputFilial = new sap.m.Select("oInputFilial", {name: "Filial", width: "100%"})\r\nvar itemSelectFilial = new sap.ui.core.Item({key: "0", text: "Selecione una filial"});\r\nvar oInputSubFilia = new sap.m.Select("oInputSubFilia", {name: "Filial", width: "100%"})\r\nvar itemSelectSubFilia = new sap.ui.core.Item({key: "0", text: "Seleccione una Compañía"});\r\noInputSubFilia.addItem(itemSelectSubFilia);\r\n\r\n\r\noInputSubFilia.attachChange({}, function() {\r\n  if (oInputSubFilia.getSelectedItem().getKey() !== \'0\' && isLoad) {\r\n      getFlowgraphPorFilial(oInputSubFilia.getSelectedItem().getKey())\r\n  }\r\n});\r\nfunction getFilial() {\r\n    oInputFilial.removeAllItems()\r\n    oInputFilial.addItem(itemSelectFilial);\r\n    $.get(SERVER_MONITOR+"filial.xsjs",function(result){\r\n    \r\n      JSON.parse(result).records.map(function(item){\r\n        oInputFilial.addItem(new sap.ui.core.Item({key: item.ID_FILIAL, text: item.NAME }));\r\n      })\r\n    });\r\n}\r\nfunction getSubFilial(filial) {\r\n    oInputSubFilia.removeAllItems()\r\n    oInputSubFilia.addItem(itemSelectSubFilia);\r\n    $.get(SERVER_MONITOR+"sub_filial.xsjs?filial="+filial,function(result){\r\n      JSON.parse(result).records.map(function(item){\r\n        oInputSubFilia.addItem(new sap.ui.core.Item({key: item.ID_SUB_FILIAL, text: item.NAME }));\r\n      })\r\n    });\r\n}\r\n\r\noInputFilial.attachChange({}, function() {\r\n    if (oInputFlowgraph.getSelectedItem().getKey() !== \'0\') {\r\n        getJustLogs(oInputFlowgraph.getSelectedItem().getKey())\r\n    }\r\n    if (oInputFilial.getSelectedItem().getKey() !== \'0\') {\r\n        getSubFilial(oInputFilial.getSelectedItem().getKey())\r\n    }\r\n});\r\n\r\nfunction monitoreView() {\r\n    fillTableUploadDate([])\r\n    getFilialByUser(user.name.toUpperCase(), true)\r\n    isLoad = true\r\n    oInputFlowgraph.removeAllItems()\r\n    oInputFlowgraph.addItem(itemSelect);\r\n    TituloDeLaAplicacion.setText("Carga ETL SIC")\r\n    oGridBeforeHeader.removeAllContent()\r\n    oGridHeader.removeAllContent()\r\n    oGridBody.removeAllContent()\r\n    oGridinputCheckBox.removeAllContent()\r\n    oGridHeader.addContent(oInputSubFilia)\r\n    oGridHeader.addContent(oInputFlowgraph)\r\n    oGridHeader.addContent(ejecutarBotton)\r\n    oGridBody.removeAllContent()\r\n    if (isAdmin) {\r\n        oBar.addContentLeft(oButtonBack)\r\n    }\r\n    oGridIndexBody.removeAllContent()\r\n    oGridBody.addContent(oTableLogs)\r\n    oGridBody.addContent(oTableUploadRecords)\r\n    oInputFlowgraph.setSelectedKey(\'0\')\r\n    oInputFilial.setSelectedKey(\'0\')\r\n    var oModel = new sap.ui.model.json.JSONModel();        // created a JSON model      \r\n    oModel.setData({modelData: []});                              // Set the data to the model using the JSON object defined already\r\n    oTableLogs.setModel(oModel);                                                                                  \r\n    oTableLogs.bindRows("/modelData");\r\n  }\r\nvar flowgraph = {}\r\nvar LogRecordsFull = {keys:[]}\r\nvar LogRecords = []\r\nvar oTextloadRecords =  new sap.m.Text({text:\'Total Registros: \'})\r\nvar oInputSelectFilter = new sap.m.Select("oInputSelectFilter", {name: "Filial", width: "200px"})\r\noInputSelectFilter.addItem(new sap.ui.core.Item({key: \'1\', text: \'Fallidos\'}));\r\noInputSelectFilter.addItem(new sap.ui.core.Item({key: \'2\', text: \'Exitosos\'}));\r\noInputSelectFilter.addItem(new sap.ui.core.Item({key: \'0\', text: \'Todos\'}));\r\noInputSelectFilter.setSelectedKey(\'1\')\r\noInputSelectFilter.attachChange({}, function() {\r\n    switch (oInputSelectFilter.getSelectedItem().getKey()) {\r\n      case \'0\':\r\n          fillTableUploadDate(LogRecords)\r\n          break;\r\n      case \'1\':\r\n          fillTableUploadDate(LogRecords.filter(function(record) {\r\n              return record.STATUS === \'FALLIDO\' || record.STATUS === \'ERROR LLAVE REPETIDA\'\r\n          }))\r\n          break;\r\n      case \'2\':\r\n          fillTableUploadDate(LogRecords.filter(function(record) {\r\n              return record.STATUS === \'CORRECTO\'\r\n          }))\r\n          break;\r\n      default:\r\n          fillTableUploadDate(LogRecords)\r\n          break;\r\n    }\r\n});\r\nvar oBarNewTableUploadRecords = new sap.m.Bar( {\r\n    contentLeft : [ oTextloadRecords ],\r\n    contentMiddle : [],\r\n    contentRight : [oInputSelectFilter]\r\n});\r\n\r\nvar oTableUploadRecords = new sap.ui.table.Table({\r\n  title:oBarNewTableUploadRecords,                                   // Displayed as the heading of the table\r\n  selectionMode:sap.ui.table.SelectionMode.Single,\r\n  enableColumnReordering:true,\r\n  visibleRowCount: 4,\r\n  width:"100%"                              // width of the table\r\n});\r\nvar oTextLogs =  new sap.m.Text({text:\'Logs :\'})\r\nvar  recargarLogs = new sap.m.Button(\'Recargalog\',{icon:\'sap-icon://refresh\'}).attachPress({}, function() {\r\n    if (oInputFlowgraph.getSelectedItem().getKey() !== \'0\'){\r\n        getJustLogs(oInputFlowgraph.getSelectedItem().getKey())\r\n        fillTableUploadDate([])\r\n    }\r\n  });\r\nvar oBarNewTableLogs = new sap.m.Bar( {\r\n  contentLeft : [oTextLogs],\r\n  contentMiddle : [],\r\n  contentRight : [recargarLogs]\r\n});\r\nvar oTableLogs = new sap.ui.table.Table(\'oTableLogs\',{\r\n        title: oBarNewTableLogs,                                   // Displayed as the heading of the table\r\n        selectionMode:sap.ui.table.SelectionMode.Single,\r\n        enableColumnReordering:true,\r\n        visibleRowCount: 4,       // Allows you to drag and drop the column and reorder the position of the column\r\n        width:"100%"                              // width of the table\r\n      }).addColumn(new sap.ui.table.Column({\r\n          width: "300px",\r\n          label: new sap.m.Label({text: "Usuario"}),             // Creates an Header with value defined for the text attribute\r\n          template: new sap.m.Text().bindProperty("text", "USER"), // binds the value into the text field defined using JSON\r\n          sortProperty: "USER",        // enables sorting on the column\r\n          filterProperty: "USER",       // enables set filter on the column\r\n        })).addColumn(new sap.ui.table.Column({\r\n            width: "125px",\r\n          label: new sap.ui.commons.Label({text: "Estado"}),             // Creates an Header with value defined for the text attribute\r\n          template: new sap.m.Text().bindText("STATUS", function(fValue) {\r\n                if (typeof fValue === "string") {\r\n                    if (fValue === "COMPLETADO"){\r\n                        this.removeStyleClass("TextError");\r\n                        this.removeStyleClass("TextWarning");\r\n                        this.addStyleClass("TextSuccess");\r\n                    } else if (fValue === "FALLIDO"){\r\n                        this.removeStyleClass("TextSuccess");\r\n                        this.removeStyleClass("TextWarning");\r\n                        this.addStyleClass("TextError");\r\n                    } else if (fValue === "ERROR LLAVE REPETIDA"){\r\n                        this.removeStyleClass("TextSuccess");\r\n                        this.removeStyleClass("TextWarning");\r\n                        this.addStyleClass("TextError");\r\n                    } else if (fValue === "PENDIENTE"){\r\n                        this.removeStyleClass("TextSuccess");\r\n                        this.removeStyleClass("TextError");\r\n                        this.addStyleClass("TextWarning");\r\n                    } else if (fValue === "DESHABILITADA"){\r\n                        this.removeStyleClass("TextSuccess");\r\n                        this.removeStyleClass("TextError");\r\n                        this.addStyleClass("TextWarning");\r\n                    } else if (fValue === "INCOMPLETO"){\r\n                        this.removeStyleClass("TextSuccess");\r\n                        this.removeStyleClass("TextError");\r\n                        this.addStyleClass("TextWarning");\r\n                    } else {\r\n                        this.removeStyleClass("TextSuccess");\r\n                        this.removeStyleClass("TextError");\r\n                        this.removeStyleClass("TextWarning");\r\n                    }\r\n                    return fValue;\r\n                }\r\n                return "";\r\n            }), // binds the value into the text field defined using JSON\r\n          sortProperty: "STATUS",        // enables sorting on the column\r\n          filterProperty: "STATUS",       // enables set filter on the column\r\n        })).addColumn(new sap.ui.table.Column({\r\n            width: "200px",\r\n          label: new sap.m.Label({text: "Tipo"}),             // Creates an Header with value defined for the text attribute\r\n          template: new sap.m.Text().bindProperty("text", "TIPO"), // binds the value into the text field defined using JSON\r\n          sortProperty: "TIPO",        // enables sorting on the column\r\n          filterProperty: "TIPO",       // enables set filter on the column\r\n        })).addColumn(new sap.ui.table.Column({\r\n            width: "125px",\r\n          label: new sap.m.Label({text: "Fecha"}),             // Creates an Header with value defined for the text attribute\r\n          template: new sap.m.Text().bindProperty("text", "fecha"), // binds the value into the text field defined using JSON\r\n          sortProperty: "fecha",        // enables sorting on the column\r\n          filterProperty: "fecha",       // enables set filter on the column\r\n        })).addColumn(new sap.ui.table.Column({\r\n            width: "125px",\r\n            label: new sap.m.Label({text: "Hora"}),             // Creates an Header with value defined for the text attribute\r\n            template: new sap.m.Text().bindProperty("text", "hora"), // binds the value into the text field defined using JSON\r\n            sortProperty: "hora",        // enables sorting on the column\r\n            filterProperty: "hora",       // enables set filter on the column\r\n          })).addColumn(new sap.ui.table.Column({\r\n              width: "125px",\r\n            label: new sap.m.Label({text: "Fecha fin"}),             // Creates an Header with value defined for the text attribute\r\n            template: new sap.m.Text().bindProperty("text", "fecha_fin"), // binds the value into the text field defined using JSON\r\n            sortProperty: "fecha_fin",        // enables sorting on the column\r\n            filterProperty: "fecha_fin",       // enables set filter on the column\r\n          })).addColumn(new sap.ui.table.Column({\r\n              width: "125px",\r\n              label: new sap.m.Label({text: "Hora fin"}),             // Creates an Header with value defined for the text attribute\r\n              template: new sap.m.Text().bindProperty("text", "hora_fin"), // binds the value into the text field defined using JSON\r\n              sortProperty: "hora_fin",        // enables sorting on the column\r\n              filterProperty: "hora_fin",       // enables set filter on the column\r\n            })).addColumn(new sap.ui.table.Column({\r\n                width: "500px",\r\n            label: new sap.m.Label({text: "Mensaje"}),             // Creates an Header with value defined for the text attribute\r\n            template: new sap.m.Text().bindProperty("text", "LOG"), // binds the value into the text field defined using JSON\r\n            sortProperty: "LOG",        // enables sorting on the column\r\n            filterProperty: "LOG",       // enables set filter on the column\r\n          }))\r\n\r\nfunction getFilialByUser(userQ, isETL){\r\n    $.ajax({\r\n      "url": SERVER_MONITOR + (isBlank(userQ) ? \'filial_user.xsjs/?username=ALL\' : "filial_user.xsjs/?username="+userQ.toUpperCase()) ,\r\n      "success": function(data) {\r\n        responseJson = JSON.parse(data);\r\n        var oModel = new sap.ui.model.json.JSONModel();        // created a JSON model      \r\n\r\n        oModel.setData({modelData: responseJson.records});                              // Set the data to the model using the JSON object defined already\r\n\r\n        oTableFilialUser.setModel(oModel);                                                                                  \r\n\r\n        oTableFilialUser.bindRows("/modelData");\r\n        oInputSubFilia.removeAllItems()\r\n        if (isETL) {\r\n            oInputSubFilia.addItem(itemSelectSubFilia);\r\n            responseJson.records.map(function(record){\r\n                oInputSubFilia.addItem(new sap.ui.core.Item({key: record.ID_SUB_FILIAL, text: record.NAME}));\r\n            })\r\n        } else {\r\n            getFilial()\r\n        }\r\n        oInputSubFilia.setSelectedKey(\'0\')\r\n      },\r\n      "error": function(){\r\n        logout()\r\n      },\r\n      "complete": function() {\r\n        //location.reload()\r\n      }\r\n    });\r\n}\r\nfunction deleteRecordsFiliar(){\r\n    var arrayIndex = oTableFilialUser.getSelectedIndices()\r\n    if (arrayIndex.length > 0) {\r\n        var values = []\r\n        arrayIndex.map(function(indexRow) {\r\n\r\n          var keysForDelete = oTableFilialUser.getModel().oData.modelData[indexRow]\r\n          values.push(keysForDelete.ID_FILIAL_USER)\r\n        })\r\n        if (values.length > 0) {\r\n            if (true) {\r\n                $.ajax({\r\n                  "url": SERVER+\'deleteAnyTable.xsjs/\',\r\n                  contentType: "application/json; charset=utf-8",\r\n                  dataType: "json",\r\n                  type: "POST",\r\n                  "data": JSON.stringify({\r\n                      pk: {name: \'ID_FILIAL_USER\', value: values},\r\n                      name: \'FILIAL_USER\',\r\n                      schema: \'DATO_MAESTRO_ADMIN\' \r\n                  }),\r\n                  "success": function(data) {\r\n                    var responseJson = {}\r\n                    if (typeof(data) == \'String\') {\r\n                      responseJson = JSON.parse(data);\r\n                    } else {\r\n                      responseJson = data  \r\n                    }\r\n                    getFilialByUser(oSearchField.getValue());\r\n                  },\r\n                  "error": function(){\r\n                    logout()\r\n                  },\r\n                  "complete": function() {\r\n                    //location.reload()\r\n                  }\r\n                });\r\n            }\r\n        }\r\n    } else {\r\n        oDialogoErro.open()\r\n    }\r\n}\r\nvar  eliminarUsuarioFiliar = new sap.m.Button(\'eliminarUsuarioFilial\',{icon:\'sap-icon://delete\'}).attachPress({}, function() {\r\n    deleteRecordsFiliar()\r\n});\r\nvar oBarNewTableUsuarioFiliar = new sap.m.Bar( {\r\n    contentLeft : [new sap.m.Text({text:\'Usuarios por Filial\'})],\r\n    contentMiddle : [],\r\n    contentRight : [eliminarUsuarioFiliar]\r\n});\r\n\r\nvar oTableFilialUser = new sap.ui.table.Table(\'oTableFilialUser\',{\r\n        title: oBarNewTableUsuarioFiliar,                                   // Displayed as the heading of the table\r\n        selectionMode:sap.ui.table.SelectionMode.MultiToggle,\r\n        enableColumnReordering:true,       // Allows you to drag and drop the column and reorder the position of the column\r\n        width:"100%"                              // width of the table\r\n      }).addColumn(new sap.ui.table.Column({\r\n          width: "350px",\r\n          label: new sap.m.Label({text: "Usuario"}),             // Creates an Header with value defined for the text attribute\r\n          template: new sap.m.Text().bindProperty("text", "USER"), // binds the value into the text field defined using JSON\r\n          sortProperty: "USER",        // enables sorting on the column\r\n          filterProperty: "USER",       // enables set filter on the column\r\n        })).addColumn(new sap.ui.table.Column({\r\n            width: "400px",\r\n          label: new sap.m.Label({text: "Filial"}),             // Creates an Header with value defined for the text attribute\r\n          template: new sap.m.Text().bindProperty("text", "NAME"), // binds the value into the text field defined using JSON\r\n          sortProperty: "NAME",        // enables sorting on the column\r\n          filterProperty: "NAME",       // enables set filter on the column\r\n        }))\r\n\r\nvar oDialogoErroEjecutarETL = new sap.m.Dialog(\r\n  {title: \'Error\', icon:\'sap-icon://error\'}\r\n).addButton( new sap.m.Button({text: "Cerrar"}).attachPress(function(argument) {\r\n  oDialogoErroEjecutarETL.close()\r\n})\r\n).addContent(new sap.m.Text({text:\' Esta carga está inhabilitada, consulte con el aministrador. \'}))\r\nfunction getLogs(flowgraph) {\r\n  fillTableUploadDate([])\r\n  ejecutarBotton.setEnabled(false)\r\n  ejecutarBotton.setText(\'Ejecutando ...\')\r\n  $.get(SERVER_MONITOR+"logic.xsjs?flowgraph="+flowgraph +"&filiar="+oInputSubFilia.getSelectedKey()+\'&user=\'+ user.firstName.toUpperCase() + \' \' + user.lastName.toUpperCase() ,function(result){\r\n    ejecutarBotton.setText(\'Ejecutar ETL\')\r\n    ejecutarBotton.setEnabled(true)\r\n    var model = JSON.parse(result)\r\n    if (!model.error) {\r\n      var records = model.records\r\n      var trueModel = records.map((item) => {\r\n        return {...item, hora: item.CREATE_DATE.split(\'T\')[1].split(\'.\')[0] , fecha: item.CREATE_DATE.split(\'T\')[0], hora_fin: item.END_DATE ? item.END_DATE.split(\'T\')[1].split(\'.\')[0] : \'\' , fecha_fin: item.END_DATE ? item.END_DATE.split(\'T\')[0] : \'\'}\r\n      })\r\n      var oModel = new sap.ui.model.json.JSONModel();        // created a JSON model      \r\n\r\n      oModel.setData({modelData: trueModel});                              // Set the data to the model using the JSON object defined already\r\n\r\n      oTableLogs.setModel(oModel);                                                                                  \r\n\r\n      oTableLogs.bindRows("/modelData");\r\n    } else if (model.display){\r\n      oDialogoErroEjecutarETL.open()\r\n    }\r\n  });\r\n}\r\nfunction getFlowgraph() {\r\n  fillTableUploadDate([])\r\n  oInputFlowgraph.removeAllItems()\r\n  oInputFlowgraph.addItem(itemSelect);\r\n  $.get(SERVER_MONITOR+"flowgraph.xsjs",function(result){\r\n    JSON.parse(result).map(function(item){\r\n        oInputFlowgraph.addItem(new sap.ui.core.Item({key: item.NAME, text: (!item.LABEL || isBlank(item.LABEL)) ? item.NAME : item.LABEL }));\r\n    })\r\n  });\r\n}\r\nfunction getFlowgraphPorFilial(filial) {\r\n  oInputFlowgraph.removeAllItems()\r\n  oInputFlowgraph.addItem(itemSelect);\r\n  $.get(SERVER_MONITOR+"filial_by_etl.xsjs?filial="+filial,function(result){\r\n    JSON.parse(result).records.map(function(item){\r\n        oInputFlowgraph.addItem(new sap.ui.core.Item({key: item.ETL_NAME, text: item.ETL_LABEL}));\r\n    })\r\n  });\r\n}\r\nfunction getJustLogs(flowgraph) {\r\n  fillTableUploadDate([])\r\n  $.get(SERVER_MONITOR+"logs.xsjs?flowgraph="+flowgraph+"&filiar="+oInputSubFilia.getSelectedKey(),function(result){\r\n    var model = JSON.parse(result)\r\n    if (!model.error) {\r\n      var trueModel = model.map((item) => {\r\n        return {...item, hora: item.CREATE_DATE.split(\'T\')[1].split(\'.\')[0] , fecha: item.CREATE_DATE.split(\'T\')[0], hora_fin: item.END_DATE ? item.END_DATE.split(\'T\')[1].split(\'.\')[0] : \'\' , fecha_fin: item.END_DATE ? item.END_DATE.split(\'T\')[0] : \'\'}\r\n      })\r\n      var oModel = new sap.ui.model.json.JSONModel();        // created a JSON model      \r\n\r\n      oModel.setData({modelData: trueModel});                              // Set the data to the model using the JSON object defined already\r\n\r\n      oTableLogs.setModel(oModel);                                                                                  \r\n\r\n      oTableLogs.bindRows("/modelData");\r\n    }\r\n  });\r\n}\r\nfunction fillTableUploadDate(modelZ) {\r\n    var oModel = new sap.ui.model.json.JSONModel();        // created a JSON model    \r\n    oModel.setData({modelData: []});                              // Set the data to the model using the JSON object defined already\r\n    oTableUploadRecords.setModel(oModel);                                                                                  \r\n    oTableUploadRecords.bindRows("/modelData");\r\n    var trueModel = modelZ.map((item) => {\r\n        LogRecordsFull.keys.map(function(keyLog){\r\n            item[keyLog.name] = String(item[keyLog.name])\r\n            if (item.CAMPO_ERROR.indexOf(keyLog.name) > -1){\r\n              item[\'CLASS_\'+keyLog.name] = \'TextError2\'\r\n            } else {\r\n              item[\'CLASS_\'+keyLog.name] = \'myTextNomal\'\r\n            }\r\n        })\r\n        return {...item, icon: item.STATUS === \'COMPLETADO\'  ? \'sap-icon://accept\' : \'sap-icon://decline\'}\r\n    })\r\n    oTableUploadRecords.removeAllColumns();\r\n    LogRecordsFull.keys.map((visibleKey) => {\r\n        switch(visibleKey.name) {\r\n          case \'ID_DETALLE_PYG\':\r\n            \r\n            break;\r\n          case \'ETL\':\r\n            \r\n              break;\r\n          case \'ID_LOG\':\r\n            \r\n              break;\r\n          case \'ID_VALIDACION\':\r\n              \r\n              break;\r\n          case \'CAMPO_ERROR\':\r\n              \r\n            break;\r\n          case \'CREATE_DATE\':\r\n              \r\n            break;\r\n          case \'STATUS\':\r\n            oTableUploadRecords.addColumn(new sap.ui.table.Column({\r\n              width: "100px",\r\n              label: new sap.ui.commons.Label({text: "Estado"}),             // Creates an Header with value defined for the text attribute\r\n              template: new sap.m.Text().bindText(\'STATUS\'), // binds the value into the text field defined using JSON\r\n              sortProperty: visibleKey.name,        // enables sorting on the column\r\n              filterProperty: visibleKey.name,       // enables set filter on the column\r\n            }));\r\n            break;\r\n          case \'DETALLE_ERROR\':\r\n            oTableUploadRecords.addColumn(new sap.ui.table.Column({\r\n              width: "500px",\r\n              label: new sap.ui.commons.Label({text: "DETALLE ERROR"}),             // Creates an Header with value defined for the text attribute\r\n              template: new sap.m.Text().bindText(\'DETALLE_ERROR\'), // binds the value into the text field defined using JSON\r\n              sortProperty: visibleKey.name,        // enables sorting on the column\r\n              filterProperty: visibleKey.name,       // enables set filter on the column\r\n            }));\r\n            break;\r\n          default:\r\n            if (visibleKey.name.indexOf(\'ID_HISTORICO_CARGA_\') < 0) {\r\n              oTableUploadRecords.addColumn(new sap.ui.table.Column({\r\n                width:  String(visibleKey.name.length * 15) + "px",\r\n                label: new sap.ui.commons.Label({text: visibleKey.label}),             // Creates an Header with value defined for the text attribute\r\n                template: new sap.m.Text().bindText(\'\', function(params) {\r\n                  this.removeStyleClass("TextError2");\r\n                  this.addStyleClass(params && params[\'CLASS_\'+visibleKey.name] ? params[\'CLASS_\'+visibleKey.name] : \'\' )\r\n                  return params && params[visibleKey.name] && params[visibleKey.name] != null && params[visibleKey.name] != \'null\' ? params[visibleKey.name] : \'\'\r\n                }), // binds the value into the text field defined using JSON\r\n                sortProperty: visibleKey.name,        // enables sorting on the column\r\n                filterProperty: visibleKey.name,       // enables set filter on the column\r\n              }));\r\n            }\r\n            break;\r\n        }\r\n      })\r\n      oModel.setData({modelData: trueModel});                              // Set the data to the model using the JSON object defined already\r\n      oTableUploadRecords.setModel(oModel);                                                                                  \r\n      oTableUploadRecords.bindRows("/modelData");\r\n}\r\nfunction getRecords(cell) {\r\n  oTableUploadRecords.removeAllColumns();\r\n  $.get(SERVER_MONITOR+"records.xsjs?flowgraph="+cell.FLOWGRAPH+"&&log="+cell.ID_LOG,function(result){\r\n    var model = JSON.parse(result)\r\n    if (!model.error) {\r\n        LogRecords = model.records\r\n        LogRecordsFull = model\r\n        oTextloadRecords.setText(\'Total Registro: \' + LogRecords.length + \', Exitosos: \' + LogRecords.filter(function(record) {\r\n          return record.STATUS === \'CORRECTO\'\r\n        }).length + \', Fallidos: \' + LogRecords.filter(function(record) {\r\n          return record.STATUS === \'FALLIDO\' || record.STATUS === \'ERROR LLAVE REPETIDA\'\r\n        }).length)\r\n        switch (oInputSelectFilter.getSelectedItem().getKey()) {\r\n            case \'0\':\r\n                fillTableUploadDate(LogRecords)\r\n                break;\r\n            case \'1\':\r\n                fillTableUploadDate(LogRecords.filter(function(record) {\r\n                    return record.STATUS === \'FALLIDO\' || record.STATUS === \'ERROR LLAVE REPETIDA\'\r\n                }))\r\n                break;\r\n            case \'2\':\r\n                fillTableUploadDate(LogRecords.filter(function(record) {\r\n                    return record.STATUS === \'CORRECTO\'\r\n                }))\r\n                break;\r\n        \r\n            default:\r\n                fillTableUploadDate(LogRecords)\r\n                break;\r\n        }\r\n    }\r\n  });\r\n}\r\n\r\n// create a simple button with some text and a tooltip only\r\noTableLogs.attachRowSelectionChange(\r\n  function(cell) {\r\n    console.log(oTableLogs, this, cell)\r\n    if (oTableLogs.getSelectedIndices().length > 0) {\r\n      var cells = oTableLogs.getModel().oData.modelData[oTableLogs.getSelectedIndices()[0]]\r\n      getRecords(cells)\r\n    }\r\n  }\r\n)\r\n// attach buttom to some element in the page\r\nvar  ejecutarBotton = new sap.m.Button(ejecutarBotton,{text:\'Ejecutar ETL\', type: sap.m.ButtonType.Emphasized}).attachPress({}, function() {\r\n    if (oInputFlowgraph.getSelectedItem().getKey() !== \'0\' && oInputSubFilia.getSelectedKey() !== \'0\'){\r\n        getLogs(oInputFlowgraph.getSelectedItem().getKey());\r\n        fillTableUploadDate([])\r\n    } else {\r\n        alert("Debe selecionar una carga y una filial")\r\n    }\r\n  });\r\n\r\nsetInterval(function () {\r\n    $( "tr:has(td):has(div)" ).removeClass( "myTextWarning" ).removeClass( "myTextSuccess" ).removeClass( "myTextError" )\r\n    $( "tr:has(td):has(div):has(.TextSuccess)" ).addClass( "myTextSuccess" );\r\n    $( "tr:has(td):has(div):has(.TextError)" ).addClass( "myTextError" );\r\n    $( "tr:has(td):has(div):has(.TextWarning)" ).addClass( "myTextWarning" );\r\n    $( "td:has(div)" ).removeClass( "myTextWarning" ).removeClass( "myTextSuccess" ).removeClass( "myTextError" )\r\n    $( "td:has(div):has(.TextError2)" ).addClass( "myTextError" );\r\n}, 100)\r\n\r\n    var oButtonUserPermises = new sap.m.Button(\'oButtonUserPermises\', {width: \'100%\', icon:\'sap-icon://user-settings\', text: \'Administrador de Permisos Datos Maestros\'}).attachPress({}, function() {\r\n      AddUserScream();\r\n    });\r\n    var oButtonDatosMaestros = new sap.m.Button(\'oButtonDatosMaestros\', {width: \'100%\', icon:\'sap-icon://table-column\', text: \'Administrador de Datos Maestros\'}).attachPress({}, function() {\r\n      getAdmin(user)\r\n    });\r\n    var oButtonDatosMaestrosCargas = new sap.m.Button(\'oButtonDatosMaestrosCargas\', {width: \'100%\', icon:\'sap-icon://sys-prev-page\', text: \'Carga ETL SIC\'}).attachPress({}, function() {\r\n      monitoreView()\r\n    });\r\n    var oButtonValidacionesDeCarga = new sap.m.Button(\'oButtonValidacionesDeCarga\', {width: \'100%\', icon:\'sap-icon://accept\', text: \'Validaciones ETL\'}).attachPress({}, function() {\r\n        ETLValidaciones()\r\n    });\r\n    var oButtonPermisosEtl = new sap.m.Button(\'oButtonPermisosEtl\', {width: \'100%\', icon:\'sap-icon://role\', text: \'Administrador de Permisos Usuarios por Filial\'}).attachPress({}, function() {\r\n        ETLPermiso()\r\n    });\r\n    var oButtonETLPorFilial = new sap.m.Button(\'oButtonETLPorFilial\', {width: \'100%\', icon:\'sap-icon://geographic-bubble-chart\', text: \'Cargas por Filial\'}).attachPress({}, function() {\r\n      ETLPorFilial()\r\n    });\r\n    var oButtonGestrorDeCargas = new sap.m.Button(\'oButtonGestrorDeCargas\', {width: \'100%\', icon:\'sap-icon://customize\', text: \'Gestor de Cargas por Filial\'}).attachPress({}, function() {\r\n      GestrorDeCargas()\r\n    });\r\n    var oButtonDeshabilitarCargaAuto = new sap.m.Button(\'oButtonDeshabilitarCargaAuto\', {width: \'100%\', icon:\'sap-icon://status-inactive\', text: \'Deshabilitar Carga Automaticamente\'}).attachPress({}, function() {\r\n      DeshabilitarCargaAuto()\r\n    });\r\n    var oButtonEmailNotify = new sap.m.Button(\'oButtonEmailNotify\', {width: \'100%\', icon:\'sap-icon://email\', text: \'Notificaciones y Usuarios Administradores\'}).attachPress({}, function() {\r\n      EmailNotify()\r\n    });\r\n    var oGrid6 = new sap.ui.layout.Grid(\'oGrid6\',{defaultSpan:"L6 M6 S12"})\r\n    function BodyInt(){\r\n      isLoad = false\r\n      TituloDeLaAplicacion.setText("Menú Principal")\r\n      oGridBeforeHeader.removeAllContent()\r\n      oGridHeader.removeAllContent()\r\n      oGridBody.removeAllContent()\r\n      oGrid6.removeAllContent()\r\n      oGridIndexBody.removeAllContent()\r\n      OFullConten.setShowSideContent( false )\r\n      oGrid6.addContent(oButtonUserPermises);\r\n      oGrid6.addContent(oButtonDatosMaestros);\r\n      oGrid6.addContent(oButtonPermisosEtl);\r\n      oGrid6.addContent(oButtonDatosMaestrosCargas);\r\n      oGrid6.addContent(oButtonValidacionesDeCarga);\r\n      oGrid6.addContent(oButtonGestrorDeCargas);\r\n      oGrid6.addContent(oButtonETLPorFilial);\r\n      oGrid6.addContent(oButtonDeshabilitarCargaAuto);\r\n      oGrid6.addContent(oButtonEmailNotify);\r\n      oGridIndexBody.addContent(oGrid6)\r\n      oBar.removeAllContentLeft()\r\n    }\r\n    function addFiliar(){\r\n        if (oInputSubFilia.getSelectedKey() !== \'0\' && !isBlank(oSearchField.getValue())){\r\n            $.ajax({\r\n              "url": SERVER_MONITOR + "addUserFilial.xsjs/",\r\n              contentType: "application/json; charset=utf-8",\r\n              dataType: "json",\r\n              type: "POST",\r\n              "data": JSON.stringify({\r\n                user: oSearchField.getValue().toUpperCase(),\r\n                filial: oInputSubFilia.getSelectedKey()\r\n              }),\r\n              "success": function(data) {\r\n                var responseJson = {}\r\n                if (typeof(data) == \'String\') {\r\n                  responseJson = JSON.parse(data);\r\n                } else {\r\n                  responseJson = data  \r\n                }\r\n                getFilialByUser(oSearchField.getValue());\r\n                oInputSubFilia.setSelectedKey(\'0\')\r\n              },\r\n              "error": function(){\r\n                logout()\r\n              },\r\n              "complete": function() {\r\n                //location.reload()\r\n              }\r\n            });\r\n        }\r\n    }\r\n    var oButtonAddFiliar = new sap.m.Button(\'oButtonAddFilial\', {width: \'100%\', icon:\'sap-icon://key\', text: \'Agregar Filial\'}).attachPress({}, function() {\r\n      addFiliar();\r\n    });\r\n    function ETLPermiso(){\r\n        TituloDeLaAplicacion.setText("Administrador de Permisos Usuarios por Filial")\r\n        getFlowgraph()\r\n        getFilialByUser(\'\')\r\n        oGridBeforeHeader.removeAllContent()\r\n        oGridHeader.removeAllContent()\r\n        oGridBody.removeAllContent()\r\n        oGridinputCheckBox.removeAllContent()\r\n        oGridBeforeHeader.addContent(oSearchField)\r\n        oGridHeader.addContent(oInputFilial)\r\n        oGridHeader.addContent(oInputSubFilia)\r\n        oGridHeader.addContent(oButtonAddFiliar)\r\n        oGridBody.addContent(oTableFilialUser)\r\n        oInputFilial.setSelectedKey(\'0\')\r\n        oInputFlowgraph.setSelectedKey(\'0\')\r\n        oBar.removeAllContentLeft()\r\n        oBar.addContentLeft(oButtonBack)\r\n        oGridIndexBody.removeAllContent()\r\n    }\r\n    var itemSelect = new sap.ui.core.Item({key: "0", text: "Seleccione una ETL"});\r\n    var oButtonAddValidations = new sap.m.Button(\'oButtonAddValidations\', {width: \'100%\', icon:\'sap-icon://accept\', text: \'Agregar Validacion ETL\'}).attachPress({}, function() {\r\n        addValidations()\r\n    });\r\n\r\n    function deleteRecordsValidacion(){\r\n      var arrayIndex = oTableValidationsETL.getSelectedIndices()\r\n      if (arrayIndex.length > 0) {\r\n          var values = []\r\n          arrayIndex.map(function(indexRow) {\r\n            var keysForDelete = oTableValidationsETL.getModel().oData.modelData[indexRow]\r\n            values.push(keysForDelete.ID_VALIDACION)\r\n          })\r\n          if (values.length > 0) {\r\n              if (true) {\r\n                $.ajax({\r\n                  "url": SERVER+\'deleteAnyTable.xsjs/\',\r\n                  contentType: "application/json; charset=utf-8",\r\n                  dataType: "json",\r\n                  type: "POST",\r\n                  "data": JSON.stringify({\r\n                      pk: {name: \'ID_VALIDACION\', value: values},\r\n                      name: \'VALIDACION\',\r\n                      schema: \'DETALLE_CARGA\' \r\n                  }),\r\n                  "success": function(data) {\r\n                    var responseJson = {}\r\n                    if (typeof(data) == \'String\') {\r\n                      responseJson = JSON.parse(data);\r\n                    } else {\r\n                      responseJson = data  \r\n                    }\r\n                    getJustValidations();\r\n                    oDialogoConfirmaEliminacionValidacionETL.close()\r\n                  },\r\n                  "error": function(){\r\n                    logout()\r\n                  },\r\n                  "complete": function() {\r\n                    //location.reload()\r\n                  }\r\n                });\r\n              }\r\n          }\r\n      } else {\r\n          oDialogoErro.open()\r\n      }\r\n    }\r\n    var oDialogoConfirmaEliminacionValidacionETL = new sap.m.Dialog(\r\n      {title: \'Error\', icon:\'sap-icon://error\'}\r\n    ).addButton( new sap.m.Button({text: "Aceptar"}).attachPress(function(argument) {\r\n      deleteRecordsValidacion()\r\n    })).addButton( new sap.m.Button({text: "Cerrar"}).attachPress(function(argument) {\r\n      oDialogoConfirmaEliminacionValidacionETL.close()\r\n    })).addContent(new sap.m.Text({text:\' Está seguro de eliminar estas validaciones \'}))\r\n    var eliminarValidacion = new sap.m.Button(\'eliminarValidacion\',{icon:\'sap-icon://delete\'}).attachPress({}, function() {\r\n        oDialogoConfirmaEliminacionValidacionETL.open()\r\n    });\r\n    var oBarNewTableValidationETL = new sap.m.Bar( {\r\n        contentLeft : [new sap.m.Text({text:\'Validaciones\'})],\r\n        contentMiddle : [],\r\n        contentRight : [eliminarValidacion]\r\n    });\r\n    \r\n    var oTableValidationsETL = new sap.ui.table.Table(\'oTableValidationsETL\',{\r\n      title: oBarNewTableValidationETL,                                   // Displayed as the heading of the table\r\n      selectionMode:sap.ui.table.SelectionMode.MultiToggle,\r\n      enableColumnReordering:true,\r\n      visibleRowCount: 6,       // Allows you to drag and drop the column and reorder the position of the column\r\n      width:"100%"                              // width of the table\r\n    }).addColumn(new sap.ui.table.Column({\r\n      width: "125px",\r\n      label: new sap.m.Label({text: "ETL"}),             // Creates an Header with value defined for the text attribute\r\n      template: new sap.m.Text().bindProperty("text", "ETL"), // binds the value into the text field defined using JSON\r\n      sortProperty: "ETL",        // enables sorting on the column\r\n      filterProperty: "ETL",       // enables set filter on the column\r\n    })).addColumn(new sap.ui.table.Column({\r\n      width: "200px",\r\n      label: new sap.m.Label({text: "Campos"}),             // Creates an Header with value defined for the text attribute\r\n      template: new sap.m.Text().bindProperty("text", "CAMPO"), // binds the value into the text field defined using JSON\r\n      sortProperty: "CAMPO",        // enables sorting on the column\r\n      filterProperty: "CAMPO",       // enables set filter on the column\r\n    })).addColumn(new sap.ui.table.Column({\r\n      width: "200px",\r\n      label: new sap.m.Label({text: "Usuario Creador"}),             // Creates an Header with value defined for the text attribute\r\n      template: new sap.m.Text().bindProperty("text", "USUARIO_CREACION"), // binds the value into the text field defined using JSON\r\n      sortProperty: "USUARIO_CREACION",        // enables sorting on the column\r\n      filterProperty: "USUARIO_CREACION",       // enables set filter on the column\r\n    })).addColumn(new sap.ui.table.Column({\r\n      width: "700px",\r\n      label: new sap.m.Label({text: "Validación"}),             // Creates an Header with value defined for the text attribute\r\n      template: new sap.m.Text().bindProperty("text", "LABEL"), // binds the value into the text field defined using JSON\r\n      sortProperty: "LABEL",        // enables sorting on the column\r\n      filterProperty: "LABEL",       // enables set filter on the column\r\n    }))\r\n    function getJustValidations() {\r\n        $.get(SERVER_MONITOR+"validation.xsjs?etl="+oInputFlowgraph.getSelectedKey(),function(result){\r\n          var model = JSON.parse(result)\r\n          if (!model.error) {\r\n            var oModel = new sap.ui.model.json.JSONModel();        // created a JSON model      \r\n            oModel.setData({modelData: model.records});\r\n            oTableValidationsETL.setModel(oModel);                                                                                  \r\n      \r\n            oTableValidationsETL.bindRows("/modelData");\r\n          }\r\n        });\r\n      }\r\n    function addValidations(){\r\n        var pase = oInputFlowgraph.getSelectedKey() !== \'0\' ? false : \'Debe Seleccionar una carga\'\r\n        var paseField = false\r\n        var paseConditionalValidations = false\r\n        var paseConditional = false\r\n        var arrayFiled = oInputFieldValidationsList.map(function(field) {\r\n            if (isBlank(field.getValue().toUpperCase())) {\r\n                paseField = \'Todos los campos de columnas deben estar diligenciados, \'\r\n            } else if (field.getValue().toUpperCase().indexOf(\',\') > -1){\r\n                paseField = \'Debe ser un solo campo\'\r\n            }\r\n            return field.getValue().toUpperCase()\r\n        })\r\n        var arrayConditionalValidations = oInputConditionalValidationsList.map(function(field, index) {\r\n            if (isBlank(field.getValue().toUpperCase())) {\r\n                paseConditionalValidations = \'Todos los campos de valor a comparar deben estar diligenciados\'\r\n            }\r\n            return field.getValue().toUpperCase()\r\n        })\r\n        var arryConditiona = oInputConditionalList.map(function(field, index) {\r\n            if (field.getSelectedItem().getKey()=== \'0\') {\r\n                paseConditional = \'Todos los campos de condicionales deben estar diligenciados\'\r\n            } else if (field.getSelectedItem().getKey()=== \'IN\' && oInputConditionalValidationsList[index].getValue().toUpperCase().indexOf(\',\') === -1) {\r\n                paseConditional = \'Debes Separarar los campos por comas cuando selecciona la opción de los campos "dentro de"\'\r\n            }\r\n            return field.getSelectedItem().getKey()\r\n        })\r\n        var dicc = {\r\n            user: user.firstName.toUpperCase() +\' \'+user.lastName.toUpperCase() ,\r\n            field: arrayFiled,\r\n            flowgraph: oInputFlowgraph.getSelectedItem().getKey(),\r\n            conditional: arryConditiona,\r\n            conditionales: arrayConditionalValidations\r\n        }\r\n        var testtodialoerrorvalidaciones = new sap.m.Text({text: pase ? pase : \'\'})\r\n        var oDialogoErroAddValidations = new sap.m.Dialog(\r\n            {title: \'Error\', icon:\'sap-icon://error\'}\r\n        ).addButton( new sap.m.Button({text: "Cerrar"}).attachPress(function(argument) {\r\n            oDialogoErroAddValidations.close()\r\n        })\r\n        ).addContent(testtodialoerrorvalidaciones)\r\n        if (!pase && !paseField && !paseConditionalValidations && !paseConditional){\r\n            $.ajax({\r\n              "url": SERVER_MONITOR + "addNewValidations.xsjs/",\r\n              contentType: "application/json; charset=utf-8",\r\n              dataType: "json",\r\n              type: "POST",\r\n              "data": JSON.stringify(dicc),\r\n              "success": function(data) {\r\n                var responseJson = {}\r\n                if (typeof(data) == \'String\') {\r\n                  responseJson = JSON.parse(data);\r\n                } else {\r\n                  responseJson = data  \r\n                }\r\n                getJustValidations();\r\n              },\r\n              "error": function(){\r\n                logout()\r\n              },\r\n              "complete": function() {\r\n                //location.reload()\r\n              }\r\n            });\r\n        } else {\r\n            var texto = \'\'\r\n            if (pase) {\r\n                texto = texto + pase\r\n                testtodialoerrorvalidaciones.setText(texto)\r\n            }\r\n            if (paseField) {\r\n                texto = texto + paseField\r\n                testtodialoerrorvalidaciones.setText(texto)\r\n            }\r\n            if (paseConditionalValidations) {\r\n                texto = texto + paseConditionalValidations\r\n                testtodialoerrorvalidaciones.setText(texto)\r\n            }\r\n            if (paseConditional) {\r\n                texto = texto + paseConditional\r\n                testtodialoerrorvalidaciones.setText(texto)\r\n            }\r\n            oDialogoErroAddValidations.open()\r\n        }\r\n    }\r\n    var oGridBodyCondition = new sap.ui.layout.Grid({defaultSpan:"L4 M4 S4"});\r\n    var oGridBodyConditionButton = new sap.ui.layout.Grid({defaultSpan:"L4 M4 S4"});\r\n    var conditionales = [\r\n        new sap.ui.core.Item({key: \'0\', text: \'Selecione un condicional\'}),\r\n        new sap.ui.core.Item({key: \'=\', text: \'Igual que\'}),\r\n        new sap.ui.core.Item({key: \'<>\', text: \'Diferente que\'}),\r\n        new sap.ui.core.Item({key: \'>\', text: \'Mayor que\'}),\r\n        new sap.ui.core.Item({key: \'<\', text: \'Menor que\'}),\r\n        new sap.ui.core.Item({key: \'>=\', text: \'Mayor o igual que\'}),\r\n        new sap.ui.core.Item({key: \'<=\', text: \'Menor o igual que\'}),\r\n        new sap.ui.core.Item({key: \'LIKE\', text: \'Parecido a\'}),\r\n        new sap.ui.core.Item({key: \'IN\', text: \'Dentro de\'})\r\n    ]\r\n    var oInputFieldValidations = new sap.m.Input("oInputFieldValidations", {width: \'100%\'}).setPlaceholder(\'Campos a validar\')\r\n    var oInputConditionalValidations = new sap.m.Input("oInputConditionalValidations", {width: \'100%\'}).setPlaceholder(\'Valor a comparar, en caso de ser varios separelos por ","\')\r\n    var oInputConditional = new sap.m.Select("oInputConditional", {width: "100%", items: conditionales})\r\n    var oInputFieldValidationsList = [oInputFieldValidations]\r\n    var oInputConditionalValidationsList = [oInputConditionalValidations]\r\n    var oInputConditionalList = [oInputConditional]\r\n    function addConditional() {\r\n        oInputFieldValidationsList.push(new sap.m.Input({width: \'100%\'}).setPlaceholder(\'Campos a validar\'))\r\n        oInputConditionalValidationsList.push(new sap.m.Input({width: \'100%\'}).setPlaceholder(\'valor a comparar, en caso de ser varios separelos por ","\'))\r\n        var newConditionals = [\r\n            new sap.ui.core.Item({key: \'0\', text: \'Selecione un condicional\'}),\r\n            new sap.ui.core.Item({key: \'=\', text: \'Igual que\'}),\r\n            new sap.ui.core.Item({key: \'<>\', text: \'Diferente que\'}),\r\n            new sap.ui.core.Item({key: \'>\', text: \'Mayor que\'}),\r\n            new sap.ui.core.Item({key: \'<\', text: \'Menor que\'}),\r\n            new sap.ui.core.Item({key: \'>=\', text: \'Mayor o igual que\'}),\r\n            new sap.ui.core.Item({key: \'<=\', text: \'Menor o igual que\'}),\r\n            new sap.ui.core.Item({key: \'LIKE\', text: \'Parecido a\'}),\r\n            new sap.ui.core.Item({key: \'IN\', text: \'Dentro de\'})\r\n        ]\r\n        oInputConditionalList.push(new sap.m.Select({width: "100%", items: newConditionals}))\r\n        oGridBodyCondition.addContent(oInputFieldValidationsList[oInputFieldValidationsList.length - 1])\r\n        oGridBodyCondition.addContent(oInputConditionalList[oInputConditionalList.length - 1])\r\n        oGridBodyCondition.addContent(oInputConditionalValidationsList[oInputConditionalValidationsList.length - 1])\r\n    }\r\n    function removeConditional() {\r\n        length = oInputFieldValidationsList.length\r\n        if  (length > 1){\r\n            oInputFieldValidationsList = oInputFieldValidationsList.splice(-1,1)\r\n            oInputConditionalValidationsList = oInputConditionalValidationsList.splice(-1,1)\r\n            oInputConditionalList = oInputConditionalList.splice(-1,1)\r\n            oGridBodyCondition.removeAllContent()\r\n            oGridBodyCondition.addContent(oInputFieldValidationsList[0])\r\n            oGridBodyCondition.addContent(oInputConditionalList[0])\r\n            oGridBodyCondition.addContent(oInputConditionalValidationsList[0])\r\n        }\r\n    }\r\n    var oButtonAddConditional = new sap.m.Button(\'oButtonAddConditional\', {width: \'100%\', icon:\'sap-icon://add\', text: \'Agregar Condicional (AND)\'}).attachPress({}, function() {\r\n        addConditional()\r\n    });\r\n    var oButtonRemoveConditional = new sap.m.Button(\'oButtonRemoveConditional\', {width: \'100%\', icon:\'sap-icon://decline\', text: \'Remover Condiconal\'}).attachPress({}, function() {\r\n        removeConditional()\r\n    });\r\n    \r\n    function ETLValidaciones(){\r\n      TituloDeLaAplicacion.setText("Validaciones ETL")\r\n        oInputFieldValidationsList = [oInputFieldValidationsList[0]]\r\n        oInputConditionalList = [oInputConditionalList[0]]\r\n        oInputConditionalValidationsList = [oInputConditionalValidationsList[0]]\r\n        getFlowgraph()\r\n        getJustValidations()\r\n        oGridBeforeHeader.removeAllContent()\r\n        oGridHeader.removeAllContent()\r\n        oGridBody.removeAllContent()\r\n        oGridinputCheckBox.removeAllContent()\r\n        oGridIndexBody.removeAllContent()\r\n        oGridBeforeHeader.addContent(oInputFlowgraph)\r\n        oGridBeforeHeader.addContent(oGridBodyCondition)\r\n        oGridBeforeHeader.addContent(oGridBodyConditionButton)\r\n        oGridBodyCondition.addContent(oInputFieldValidationsList[0])\r\n        oGridBodyCondition.addContent(oInputConditionalList[0])\r\n        oGridBodyCondition.addContent(oInputConditionalValidationsList[0])\r\n        oGridBodyConditionButton.addContent(oButtonAddConditional)\r\n        oGridBodyConditionButton.addContent(oButtonRemoveConditional)\r\n        oGridBodyConditionButton.addContent(oButtonAddValidations)\r\n        oGridIndexBody.addContent(oTableValidationsETL)\r\n        //oGridHeader.addContent()\r\n        //oGridBody.addContent()\r\n        oInputFlowgraph.setSelectedKey(\'0\')\r\n        oInputFieldValidationsList[0].setValue(\'\')\r\n        oInputConditionalList[0].setSelectedKey(\'0\')\r\n        oInputConditionalValidationsList[0].setValue(\'\')\r\n        oBar.removeAllContentLeft()\r\n        oBar.addContentLeft(oButtonBack)\r\n    }\r\n    function deleteRecorEtlPorFilial(){\r\n      var arrayIndex = oTableEtlPorFilial.getSelectedIndices()\r\n      if (arrayIndex.length > 0) {\r\n          var values = []\r\n          arrayIndex.map(function(indexRow) {\r\n            var keysForDelete = oTableEtlPorFilial.getModel().oData.modelData[indexRow]\r\n            values.push(keysForDelete.ID_CARGA_POR_FILIAL)\r\n          })\r\n          if (values.length > 0) {\r\n              if (true) {\r\n                $.ajax({\r\n                  "url": SERVER+\'deleteAnyTable.xsjs/\',\r\n                  contentType: "application/json; charset=utf-8",\r\n                  dataType: "json",\r\n                  type: "POST",\r\n                  "data": JSON.stringify({\r\n                      pk: {name: \'ID_CARGA_POR_FILIAL\', value: values},\r\n                      name: \'CARGA_POR_FILIAL\',\r\n                      schema: \'DATO_MAESTRO_ADMIN\' \r\n                  }),\r\n                  "success": function(data) {\r\n                    var responseJson = {}\r\n                    if (typeof(data) == \'String\') {\r\n                      responseJson = JSON.parse(data);\r\n                    } else {\r\n                      responseJson = data  \r\n                    }\r\n                    getEtlPorFilial(\'ALL\');\r\n                  },\r\n                  "error": function(){\r\n                    logout()\r\n                  },\r\n                  "complete": function() {\r\n                    //location.reload()\r\n                  }\r\n                });\r\n              }\r\n          }\r\n      } else {\r\n          oDialogoErro.open()\r\n      }\r\n    }\r\n    function getEtlPorFilial(filial) {\r\n      oTableUploadRecords.removeAllColumns();\r\n      $.get(SERVER_MONITOR+"filial_by_etl.xsjs?filial="+filial,function(result){\r\n        var model = JSON.parse(result)\r\n        if (!model.error) {\r\n          var oModel = new sap.ui.model.json.JSONModel();        // created a JSON model      \r\n          oModel.setData({modelData: model.records});                              // Set the data to the model using the JSON object defined already\r\n          oTableEtlPorFilial.setModel(oModel);                                                                                  \r\n          oTableEtlPorFilial.bindRows("/modelData");\r\n        }\r\n      });\r\n    }\r\n    var oDialogoConfirmaEliminacionETLPorFilial = new sap.m.Dialog(\r\n      {title: \'Error\', icon:\'sap-icon://error\'}\r\n    ).addButton( new sap.m.Button({text: "Aceptar"}).attachPress(function(argument) {\r\n      deleteRecorEtlPorFilial()\r\n    })).addButton( new sap.m.Button({text: "Cerrar"}).attachPress(function(argument) {\r\n      oDialogoConfirmaEliminacionETLPorFilial.close()\r\n    })).addContent(new sap.m.Text({text:\' Está seguro de eliminar estás cargas por filiales \'}))\r\n    var  eliminarETLPorFilial = new sap.m.Button(\'eliminarETLPorFilial\',{icon:\'sap-icon://delete\'}).attachPress({}, function() {\r\n        oDialogoConfirmaEliminacionETLPorFilial.open()\r\n    });\r\n    var oBarNewTableEtlPorFilial = new sap.m.Bar( {\r\n        contentLeft : [new sap.m.Text({text:\'Cargas por Filial\'})],\r\n        contentMiddle : [],\r\n        contentRight : [eliminarETLPorFilial]\r\n    });\r\n    \r\n    var oTableEtlPorFilial = new sap.ui.table.Table(\'oTableEtlPorFilial\',{\r\n      title: oBarNewTableEtlPorFilial,                                   // Displayed as the heading of the table\r\n      selectionMode:sap.ui.table.SelectionMode.MultiToggle,\r\n      enableColumnReordering:true,       // Allows you to drag and drop the column and reorder the position of the column\r\n      width:"100%"                              // width of the table\r\n    }).addColumn(new sap.ui.table.Column({\r\n      label: new sap.m.Label({text: "ETL"}),             // Creates an Header with value defined for the text attribute\r\n      template: new sap.m.Text().bindProperty("text", "ETL_LABEL"), // binds the value into the text field defined using JSON\r\n      sortProperty: "ETL_LABEL",        // enables sorting on the column\r\n      filterProperty: "ETL_LABEL",       // enables set filter on the column\r\n    })).addColumn(new sap.ui.table.Column({\r\n      label: new sap.m.Label({text: "Filial"}),             // Creates an Header with value defined for the text attribute\r\n      template: new sap.m.Text().bindProperty("text", "NAME_FILIAL"), // binds the value into the text field defined using JSON\r\n      sortProperty: "NAME_FILIAL",        // enables sorting on the column\r\n      filterProperty: "NAME_FILIAL",       // enables set filter on the column\r\n    }))\r\n    function activeFiliar(record) {\r\n        $.get(SERVER_MONITOR+"active_filial.xsjs?idSubFilial="+record[\'ID_SUB_FILIAL\']+"&idflowgraph="+record[\'objectFlowgraph\'][\'ID_FLOWGRAPH\']+"&periodo="+oInputGestrorDeCargas.getValue(),function(result){\r\n          var model = JSON.parse(result)\r\n          if (!model.error) {\r\n            getGetionDeCargas(oInputFlowgraph.getSelectedKey(), oInputGestrorDeCargas.getValue())\r\n          }\r\n        });\r\n      }\r\n    function deactiveFiliar(record) {\r\n        $.get(SERVER_MONITOR+"deactive_filial.xsjs?idSubFilial="+record[\'ID_SUB_FILIAL\']+"&idflowgraph="+record[\'objectFlowgraph\'][\'ID_FLOWGRAPH\']+"&periodo="+oInputGestrorDeCargas.getValue()+"&username="+user.name.toUpperCase(),function(result){\r\n          var model = JSON.parse(result)\r\n          if (!model.error) {\r\n            getGetionDeCargas(oInputFlowgraph.getSelectedKey(), oInputGestrorDeCargas.getValue())\r\n          }\r\n        });\r\n      }\r\n    var oButtonAddEtlPorFilial = new sap.m.Button(\'oButtonAddEtlPorFilial\', {width: \'100%\', icon:\'sap-icon://add\', text: \'Agregar Carga por Filial\'}).attachPress({}, function() {\r\n      oButtonAddEtlPorFilial.setEnabled(false)\r\n      if (oInputSubFilia.getSelectedKey() !== \'0\' && oInputFlowgraph.getSelectedKey() !== \'0\') {\r\n        $.ajax({\r\n          "url": SERVER_MONITOR+\'addEtlPorFilial.xsjs/\',\r\n          contentType: "application/json; charset=utf-8",\r\n          dataType: "json",\r\n          type: "POST",\r\n          "data": JSON.stringify({\r\n            filial: oInputSubFilia.getSelectedKey(),\r\n            etl: oInputFlowgraph.getSelectedKey()\r\n          }),\r\n          "success": function(data) {\r\n            var responseJson = {}\r\n            if (typeof(data) == \'String\') {\r\n              responseJson = JSON.parse(data);\r\n            } else {\r\n              responseJson = data  \r\n            }\r\n            getEtlPorFilial(\'ALL\');\r\n          },\r\n          "error": function(){\r\n            //logout()\r\n          },\r\n          "complete": function() {\r\n            oButtonAddEtlPorFilial.setEnabled(true)\r\n            //location.reload()\r\n          }\r\n        });\r\n      }\r\n    });\r\n    function ETLPorFilial(){\r\n      TituloDeLaAplicacion.setText("Cargas por Filial")\r\n      getFlowgraph()\r\n      getSubFilial(\'ALL\')\r\n      getEtlPorFilial(\'ALL\')\r\n      oGridBeforeHeader.removeAllContent()\r\n      oGridHeader.removeAllContent()\r\n      oGridBody.removeAllContent()\r\n      oGridinputCheckBox.removeAllContent()\r\n      oGridHeader.addContent(oInputSubFilia)\r\n      oGridHeader.addContent(oInputFlowgraph)\r\n      oGridHeader.addContent(oButtonAddEtlPorFilial)\r\n      oGridBody.addContent(oTableEtlPorFilial)\r\n      oInputSubFilia.setSelectedKey(\'0\')\r\n      oInputFlowgraph.setSelectedKey(\'0\')\r\n      oBar.removeAllContentLeft()\r\n      oBar.addContentLeft(oButtonBack)\r\n      oGridIndexBody.removeAllContent()\r\n    }\r\n    var oBarNewTableGetionDeCargasText = new sap.m.Text({text:\'Cargas Habilitadas para el Período: \'})\r\n    var oBarNewTableGetionDeCargasEnableBTN = new sap.m.Button({text: \'Habilitar\',type: sap.m.ButtonType.Accept}).attachPress(function(params) {\r\n      var arrayIndex = oTableGetionDeCargas.getSelectedIndices()\r\n      var keysForDelete = \'\'\r\n      var cells = {}\r\n      if (arrayIndex.length > 0) {\r\n        arrayIndex.map(function(indexRow) {\r\n          cells = getKeysTablesFromRowsText(indexRow, oTableGetionDeCargas)\r\n          if (!cells.IS_HABILITADO) {\r\n            keysForDelete = keysForDelete + (keysForDelete.length == 0 ? cells.ID_SUB_FILIAL : \',\'+cells.ID_SUB_FILIAL)\r\n          }\r\n        })\r\n      }\r\n      activeFiliar({...cells, ID_SUB_FILIAL: keysForDelete})\r\n    })\r\n    var oBarNewTableGetionDeCargasDisableBTN = new sap.m.Button({text: \'Deshabilitar\',type: sap.m.ButtonType.Reject}).attachPress(function(params) {\r\n      var arrayIndex = oTableGetionDeCargas.getSelectedIndices()\r\n      var keysForDelete = \'\'\r\n      var cells = {}\r\n      if (arrayIndex.length > 0) {\r\n        arrayIndex.map(function(indexRow) {\r\n          cells = getKeysTablesFromRowsText(indexRow, oTableGetionDeCargas)\r\n          if (cells.IS_HABILITADO) {\r\n            keysForDelete = keysForDelete + (keysForDelete.length == 0 ? cells.ID_SUB_FILIAL : \',\'+cells.ID_SUB_FILIAL)\r\n          }\r\n        })\r\n      }\r\n      deactiveFiliar({...cells, ID_SUB_FILIAL: keysForDelete})\r\n    })\r\n    var oBarNewTableGetionDeCargas = new sap.m.Bar( {\r\n        contentLeft : [oBarNewTableGetionDeCargasText],\r\n        contentMiddle : [],\r\n        contentRight : [oBarNewTableGetionDeCargasEnableBTN, oBarNewTableGetionDeCargasDisableBTN]\r\n    });\r\n    \r\n    var oTableGetionDeCargas = new sap.ui.table.Table(\'oTableGetionDeCargas\',{\r\n      title: oBarNewTableGetionDeCargas,                                   // Displayed as the heading of the table\r\n      selectionMode: sap.ui.table.SelectionMode.MultiToggle,\r\n      enableColumnReordering:true,       // Allows you to drag and drop the column and reorder the position of the column\r\n      width:"100%"                              // width of the table\r\n    })\r\n    var oInputGestrorDeCargas = new sap.m.Input("oInputGestrorDeCargas", {width: \'100%\'}).setPlaceholder(\'Período\')\r\n    var oButtonGestrorDeCargasBuscar = new sap.m.Button(\'oButtonGestrorDeCargasBuscar\', {width: \'100%\', icon:\'sap-icon://search\', text: \'Consultar\'}).attachPress({}, function() {\r\n      getGetionDeCargas(oInputFlowgraph.getSelectedKey(), oInputGestrorDeCargas.getValue())\r\n    })\r\n    var oButtonGestrorDeCargasActiveAll = new sap.m.Button(\'oButtonGestrorDeCargasActiveAll\', {width: \'100%\', icon:\'sap-icon://accept\', text: \'Habilitar a Todas Las Filiales\'}).attachPress({}, function() {\r\n      activeAllFilial(oInputGestrorDeCargas.getValue())\r\n    })\r\n    function getGetionDeCargas(flowgraph, periodo) {\r\n        var oModel = new sap.ui.model.json.JSONModel();        // created a JSON model      \r\n        oModel.setData({modelData: []});\r\n        oTableGetionDeCargas.setModel(oModel);                                                                                  \r\n        oTableGetionDeCargas.bindRows("/modelData");\r\n      oBarNewTableGetionDeCargasText.setText("Cargas Habilitadas para el Período: " +periodo)\r\n        oTableGetionDeCargas.destroyColumns().addColumn(new sap.ui.table.Column({\r\n            width: "300px",\r\n            label: new sap.m.Label({text: "Filial"}),             // Creates an Header with value defined for the text attribute\r\n            template: new sap.m.Text().bindProperty("text", "NAME"), // binds the value into the text field defined using JSON\r\n            sortProperty: "NAME",        // enables sorting on the column\r\n            filterProperty: "NAME",       // enables set filter on the column\r\n          })).addColumn(new sap.ui.table.Column({\r\n            width: "150px",\r\n            label: new sap.m.Label({text: "Estado"}),             // Creates an Header with value defined for the text attribute\r\n            template: new sap.m.Text().bindProperty("text", "STATUS"), // binds the value into the text field defined using JSON\r\n            sortProperty: "STATUS",        // enables sorting on the column\r\n            filterProperty: "STATUS",       // enables set filter on the column\r\n          })).addColumn(new sap.ui.table.Column({\r\n            width: "250px",\r\n            label: new sap.m.Label({text: "Usuario Deshabilitador"}),             // Creates an Header with value defined for the text attribute\r\n            template: new sap.m.Text().bindProperty("text", "USER_DISABLE"), // binds the value into the text field defined using JSON\r\n          })).addColumn(new sap.ui.table.Column({\r\n            width: "150px",\r\n            label: new sap.m.Label({text: ""}),             // Creates an Header with value defined for the text attribute\r\n            template: new sap.m.Text().bindProperty("text", "", function(params) {\r\n              return params && params.IS_HABILITADO ? "Habilitada" : "Deshabilitada"\r\n            }), // binds the value into the text field defined using JSON\r\n          }))\r\n      $.get(SERVER_MONITOR+"flowgraph_by_periodo.xsjs?flowgraph="+flowgraph+"&periodo="+periodo,function(result){\r\n        var model = JSON.parse(result)\r\n        if (!model.error) {\r\n          var oModel = new sap.ui.model.json.JSONModel();        // created a JSON model      \r\n          oModel.setData({modelData: model.records});\r\n          oTableGetionDeCargas.setModel(oModel);                                                                                  \r\n          oTableGetionDeCargas.bindRows("/modelData");\r\n        }\r\n      });\r\n    }\r\n    \r\n    var oDialogoActiveAllFilial = new sap.m.Dialog(\r\n      {title: \'Error\', icon:\'sap-icon://accept\'}\r\n    ).addButton( new sap.m.Button({text: "Cerrar"}).attachPress(function(argument) {\r\n      oDialogoActiveAllFilial.close()\r\n    })\r\n    ).addContent(new sap.m.Text({text:\' Filiales Activadas para Período. \'}))\r\n\r\n    function activeAllFilial(periodo) {\r\n      $.get(SERVER_MONITOR+"active_all_filial.xsjs?periodo="+periodo,function(result){\r\n        var model = JSON.parse(result)\r\n        if (!model.error) {\r\n          getGetionDeCargas(oInputFlowgraph.getSelectedKey(), oInputGestrorDeCargas.getValue())\r\n        }\r\n      });\r\n    }\r\n    \r\n    function GestrorDeCargas(){\r\n      TituloDeLaAplicacion.setText("Gestor de Cargas por Filial")\r\n      getFlowgraph()\r\n      getSubFilial(\'ALL\')\r\n      oGridBeforeHeader.removeAllContent()\r\n      oGridHeader.removeAllContent()\r\n      oGridBody.removeAllContent()\r\n      oGridinputCheckBox.removeAllContent()\r\n      oGridHeader.addContent(oInputFlowgraph)\r\n      oGridHeader.addContent(oInputGestrorDeCargas)\r\n      oGridHeader.addContent(oButtonGestrorDeCargasBuscar)\r\n      //oGridHeader.addContent(oButtonGestrorDeCargasActiveAll)\r\n      oGridBody.addContent(oTableGetionDeCargas)\r\n      oInputSubFilia.setSelectedKey(\'0\')\r\n      oInputFlowgraph.setSelectedKey(\'0\')\r\n      oBar.removeAllContentLeft()\r\n      oBar.addContentLeft(oButtonBack)\r\n      oGridIndexBody.removeAllContent()\r\n    }\r\n    function DeleteDeshabilitarCargaAuto(){\r\n      var arrayIndex = oTableDeshabilitarCargaAuto.getSelectedIndices()\r\n      if (arrayIndex.length > 0) {\r\n          var values = []\r\n          arrayIndex.map(function(indexRow) {\r\n            var keysForDelete = oTableDeshabilitarCargaAuto.getModel().oData.modelData[indexRow]\r\n            values.push(keysForDelete.ID_DESACTIVAR_CARGA)\r\n          })\r\n          if (values.length > 0) {\r\n              if (true) {\r\n                  $.ajax({\r\n                    "url": SERVER+\'deleteAnyTable.xsjs/\',\r\n                    contentType: "application/json; charset=utf-8",\r\n                    dataType: "json",\r\n                    type: "POST",\r\n                    "data": JSON.stringify({\r\n                      pk: {name: \'ID_DESACTIVAR_CARGA\', value: values},\r\n                      name: \'DESACTIVAR_CARGA\',\r\n                      schema: \'DATO_MAESTRO_ADMIN\' \r\n                    }),\r\n                    "success": function(data) {\r\n                      var responseJson = {}\r\n                      if (typeof(data) == \'String\') {\r\n                        responseJson = JSON.parse(data);\r\n                      } else {\r\n                        responseJson = data  \r\n                      }\r\n                      getDeshabilitarCargaAuto();\r\n                      oDialogoConfirmaEliminacionDeshabilitarCargaAuto.close()\r\n                    },\r\n                    "error": function(){\r\n                      logout()\r\n                    },\r\n                    "complete": function() {\r\n                      //location.reload()\r\n                    }\r\n                  });\r\n              }\r\n          }\r\n      } else {\r\n          oDialogoErro.open()\r\n      }\r\n  }\r\n    var oDialogoConfirmaEliminacionDeshabilitarCargaAuto = new sap.m.Dialog(\r\n      {title: \'Error\', icon:\'sap-icon://error\'}\r\n    ).addButton( new sap.m.Button({text: "Aceptar"}).attachPress(function(argument) {\r\n      DeleteDeshabilitarCargaAuto()\r\n    })).addButton( new sap.m.Button({text: "Cerrar"}).attachPress(function(argument) {\r\n      oDialogoConfirmaEliminacionDeshabilitarCargaAuto.close()\r\n    })).addContent(new sap.m.Text({text:\' Está seguro de eliminar estos registros \'}))\r\n    var oButtonDeleteDeshabilitarCargaAuto = new sap.m.Button({icon:\'sap-icon://delete\'}).attachPress({}, function() {\r\n      oDialogoConfirmaEliminacionDeshabilitarCargaAuto.open()\r\n    });\r\n    var oBarNewTableDeshabilitarCargaAutoText = new sap.m.Text({text:\'Deshabilitar cargas a partir del día\'})\r\n    var oBarNewTableDeshabilitarCargaAuto = new sap.m.Bar( {\r\n        contentLeft : [oBarNewTableDeshabilitarCargaAutoText],\r\n        contentMiddle : [],\r\n        contentRight : [oButtonDeleteDeshabilitarCargaAuto]\r\n    });\r\n    var oTableDeshabilitarCargaAuto = new sap.ui.table.Table(\'oTableDeshabilitarCargaAuto\',{\r\n      title: oBarNewTableDeshabilitarCargaAuto,                                   // Displayed as the heading of the table\r\n      selectionMode: sap.ui.table.SelectionMode.MultiToggle,\r\n      enableColumnReordering:true,       // Allows you to drag and drop the column and reorder the position of the column\r\n      width:"100%"                              // width of the table\r\n    }).addColumn(new sap.ui.table.Column({\r\n      width: "250px",\r\n      label: new sap.m.Label({text: "ETL"}),             // Creates an Header with value defined for the text attribute\r\n      template: new sap.m.Text().bindProperty("text", "LABEL"), // binds the value into the text field defined using JSON\r\n      sortProperty: "LABEL",        // enables sorting on the column\r\n      filterProperty: "LABEL",       // enables set filter on the column\r\n    })).addColumn(new sap.ui.table.Column({\r\n      width: "50px",\r\n      label: new sap.m.Label({text: "Día"}),             // Creates an Header with value defined for the text attribute\r\n      template: new sap.m.Text().bindProperty("text", "DIA"), // binds the value into the text field defined using JSON\r\n      sortProperty: "DIA",        // enables sorting on the column\r\n      filterProperty: "DIA",       // enables set filter on the column\r\n    }));\r\n    var oInputDeshabilitarCargaAutoDia = new sap.m.Input("oInputDeshabilitarCargaAutoDia", {width: \'100%\', type: sap.m.InputType.Number}).setPlaceholder(\'Día\')\r\n    var oButtonDeshabilitarCargaAutoDiaAdd = new sap.m.Button(\'oButtonDeshabilitarCargaAutoDiaAdd\', {width: \'100%\', icon:\'sap-icon://add\', text: \'Agregar Día\'}).attachPress({}, function() {\r\n      addDeshabilitarCargaAuto(oInputFlowgraph.getSelectedKey(), oInputDeshabilitarCargaAutoDia.getValue())\r\n    })\r\n    function getDeshabilitarCargaAuto() {\r\n      $.get(SERVER_MONITOR+"desactivar_carga.xsjs",function(result){\r\n        var model = JSON.parse(result)\r\n        if (!model.error) {\r\n          var oModel = new sap.ui.model.json.JSONModel();        // created a JSON model      \r\n          oModel.setData({modelData: model});                              // Set the data to the model using the JSON object defined already\r\n          oTableDeshabilitarCargaAuto.setModel(oModel);                                                                                  \r\n          oTableDeshabilitarCargaAuto.bindRows("/modelData");\r\n        }\r\n      });\r\n    }\r\n    function addDeshabilitarCargaAuto(etl, day) {\r\n      $.ajax({\r\n        "url": SERVER_MONITOR+\'addDeshabilitarCargaAuto.xsjs/\',\r\n        contentType: "application/json; charset=utf-8",\r\n        dataType: "json",\r\n        type: "POST",\r\n        "data": JSON.stringify({\r\n          day,\r\n          etl\r\n        }),\r\n        "success": function(data) {\r\n          var responseJson = {}\r\n          if (typeof(data) == \'String\') {\r\n            responseJson = JSON.parse(data);\r\n          } else {\r\n            responseJson = data  \r\n          }\r\n          DeshabilitarCargaAuto();\r\n        },\r\n        "error": function(){\r\n          logout()\r\n        },\r\n        "complete": function() {\r\n          //location.reload()\r\n        }\r\n      });\r\n    }\r\n    function DeshabilitarCargaAuto(){\r\n      TituloDeLaAplicacion.setText("Deshabilitar Carga Automaticamente")\r\n      getFlowgraph()\r\n      getDeshabilitarCargaAuto()\r\n      oGridBeforeHeader.removeAllContent()\r\n      oGridHeader.removeAllContent()\r\n      oGridBody.removeAllContent()\r\n      oGridinputCheckBox.removeAllContent()\r\n      oGridHeader.addContent(oInputFlowgraph)\r\n      oGridHeader.addContent(oInputDeshabilitarCargaAutoDia)\r\n      oGridHeader.addContent(oButtonDeshabilitarCargaAutoDiaAdd)\r\n      oGridBody.addContent(oTableDeshabilitarCargaAuto)\r\n      oInputFlowgraph.setSelectedKey(\'0\')\r\n      oBar.removeAllContentLeft()\r\n      oBar.addContentLeft(oButtonBack)\r\n      oGridIndexBody.removeAllContent()\r\n    }\r\n\r\n    function DeleteEmailNotify(){\r\n      var arrayIndex = oTableEmailNotify.getSelectedIndices()\r\n      if (arrayIndex.length > 0) {\r\n          var values = []\r\n          arrayIndex.map(function(indexRow) {\r\n            var keysForDelete \r\n            try {\r\n              keysForDelete = oTableEmailNotify.getModel().oData.modelData[oTableEmailNotify.getModel().aBindings[oTableEmailNotify.getModel().aBindings.length-1].aIndices[indexRow]]\r\n            }\r\n            catch(err) {\r\n              keysForDelete = oTableEmailNotify.getModel().oData.modelData[oTableEmailNotify.getModel().aBindings[0].aIndices[indexRow]]\r\n            }\r\n            values.push(keysForDelete.ID_EMAIL)\r\n          })\r\n          if (values.length > 0) {\r\n              if (true) {\r\n                  $.ajax({\r\n                    "url": SERVER+\'deleteAnyTable.xsjs/\',\r\n                    contentType: "application/json; charset=utf-8",\r\n                    dataType: "json",\r\n                    type: "POST",\r\n                    "data": JSON.stringify({\r\n                      pk: {name: \'ID_EMAIL\', value: values},\r\n                      name: \'EMAIL\',\r\n                      schema: \'DATO_MAESTRO_ADMIN\' \r\n                    }),\r\n                    "success": function(data) {\r\n                      var responseJson = {}\r\n                      if (typeof(data) == \'String\') {\r\n                        responseJson = JSON.parse(data);\r\n                      } else {\r\n                        responseJson = data  \r\n                      }\r\n                      getEmailNotify();\r\n                      oDialogoConfirmaEliminacionEmailNotify.open()\r\n                    },\r\n                    "error": function(){\r\n                      logout()\r\n                    },\r\n                    "complete": function() {\r\n                      //location.reload()\r\n                    }\r\n                  });\r\n              }\r\n          }\r\n      } else {\r\n          oDialogoErro.open()\r\n      }\r\n  }\r\n\r\n    var oDialogoConfirmaEliminacionEmailNotify = new sap.m.Dialog(\r\n      {title: \'Error\', icon:\'sap-icon://error\'}\r\n    ).addButton( new sap.m.Button({text: "Aceptar"}).attachPress(function(argument) {\r\n      DeleteEmailNotify()\r\n    })).addButton( new sap.m.Button({text: "Cerrar"}).attachPress(function(argument) {\r\n      oDialogoConfirmaEliminacionEmailNotify.close()\r\n    })).addContent(new sap.m.Text({text:\' Está seguro de eliminar estos correos para notificar \'}))\r\n    var oButtonDeleteEmailNotify = new sap.m.Button({icon:\'sap-icon://delete\'}).attachPress({}, function() {\r\n      oDialogoConfirmaEliminacionEmailNotify.open()\r\n    });\r\n    var oBarNewTableEmailNotifyText = new sap.m.Text({text:\'Email a Notificar\'})\r\n    var oBarNewTableEmailNotify = new sap.m.Bar( {\r\n        contentLeft : [oBarNewTableEmailNotifyText],\r\n        contentMiddle : [],\r\n        contentRight : [oButtonDeleteEmailNotify]\r\n    });\r\n    var oTableEmailNotify = new sap.ui.table.Table(\'oTableEmailNotify\',{\r\n      title: oBarNewTableEmailNotify,                                   // Displayed as the heading of the table\r\n      selectionMode: sap.ui.table.SelectionMode.MultiToggle,\r\n      enableColumnReordering:true,       // Allows you to drag and drop the column and reorder the position of the column\r\n      width:"100%"                              // width of the table\r\n    }).addColumn(new sap.ui.table.Column({\r\n      label: new sap.m.Label({text: "Correo Electrónico"}),             // Creates an Header with value defined for the text attribute\r\n      template: new sap.m.Text().bindProperty("text", "EMAIL"), // binds the value into the text field defined using JSON\r\n      sortProperty: "EMAIL",        // enables sorting on the column\r\n      filterProperty: "EMAIL",       // enables set filter on the column\r\n    }));\r\n    var oInputEmailNotifyDia = new sap.m.Input("oInputEmailNotifyDia", {width: \'100%\', type: sap.m.InputType.Email}).setPlaceholder(\'Correo Electrónico\')\r\n    var oButtonEmailNotifyDiaAdd = new sap.m.Button(\'oButtonEmailNotifyDiaAdd\', {width: \'100%\', icon:\'sap-icon://add\', text: \'Agregar Correo Electrónico para ser Notificado\'}).attachPress({}, function() {\r\n      addEmailNotify(oInputEmailNotifyDia.getValue())\r\n    })\r\n    function getEmailNotify() {\r\n      $.get(SERVER_MONITOR+"email_notify.xsjs",function(result){\r\n        var model = JSON.parse(result)\r\n        if (!model.error) {\r\n          var oModel = new sap.ui.model.json.JSONModel();        // created a JSON model      \r\n          oModel.setData({modelData: model});                              // Set the data to the model using the JSON object defined already\r\n          oTableEmailNotify.setModel(oModel);                                                                                  \r\n          oTableEmailNotify.bindRows("/modelData");\r\n        }\r\n      });\r\n    }\r\n    function addEmailNotify(email) {\r\n      $.ajax({\r\n        "url": SERVER_MONITOR+\'addEmailNotify.xsjs/\',\r\n        contentType: "application/json; charset=utf-8",\r\n        dataType: "json",\r\n        type: "POST",\r\n        "data": JSON.stringify({\r\n          email,\r\n        }),\r\n        "success": function(data) {\r\n          var responseJson = {}\r\n          if (typeof(data) == \'String\') {\r\n            responseJson = JSON.parse(data);\r\n          } else {\r\n            responseJson = data  \r\n          }\r\n          getEmailNotify();\r\n        },\r\n        "error": function(){\r\n          logout()\r\n        },\r\n        "complete": function() {\r\n          //location.reload()\r\n        }\r\n      });\r\n    }\r\n\r\n    function DeleteEmailAdmin(){\r\n      console.log(oTableEmailAdmin);\r\n      var arrayIndex = oTableEmailAdmin.getSelectedIndices()\r\n      if (arrayIndex.length > 0) {\r\n          var values = []\r\n          arrayIndex.map(function(indexRow) {\r\n            var keysForDelete\r\n            try {\r\n              keysForDelete = oTableEmailAdmin.getModel().oData.modelData[oTableEmailAdmin.getModel().aBindings[oTableEmailAdmin.getModel().aBindings.length-1].aIndices[indexRow]]\r\n            }\r\n            catch(err) {\r\n              keysForDelete = oTableEmailAdmin.getModel().oData.modelData[oTableEmailAdmin.getModel().aBindings[0].aIndices[indexRow]]\r\n            }\r\n            values.push(keysForDelete.ID)\r\n          })\r\n          if (values.length > 0) {\r\n              if (true) {\r\n                $.ajax({\r\n                  "url": SERVER+\'deleteAnyTable.xsjs/\',\r\n                  contentType: "application/json; charset=utf-8",\r\n                  dataType: "json",\r\n                  type: "POST",\r\n                  "data": JSON.stringify({\r\n                    pk: {name: \'ID\', value: values},\r\n                    name: \'ADMIND_USER\',\r\n                    schema: \'DATO_MAESTRO_ADMIN\' \r\n                  }),\r\n                  "success": function(data) {\r\n                    var responseJson = {}\r\n                    if (typeof(data) == \'String\') {\r\n                      responseJson = JSON.parse(data);\r\n                    } else {\r\n                      responseJson = data  \r\n                    }\r\n                    getEmailAdmin();\r\n                    oDialogoConfirmaEliminacionEmailAdmin.close()\r\n                  },\r\n                  "error": function(){\r\n                    logout()\r\n                  },\r\n                  "complete": function() {\r\n                    //location.reload()\r\n                  }\r\n                });\r\n              }\r\n          }\r\n      } else {\r\n          oDialogoErro.open()\r\n      }\r\n  }\r\n    var oDialogoConfirmaEliminacionEmailAdmin = new sap.m.Dialog(\r\n      {title: \'Error\', icon:\'sap-icon://error\'}\r\n    ).addButton( new sap.m.Button({text: "Aceptar"}).attachPress(function(argument) {\r\n      DeleteEmailAdmin()\r\n    })).addButton( new sap.m.Button({text: "Cerrar"}).attachPress(function(argument) {\r\n      oDialogoConfirmaEliminacionEmailAdmin.close()\r\n    })).addContent(new sap.m.Text({text:\' Está seguro de eliminar estos correos como administradores \'}))\r\n    var oButtonDeleteEmailAdmin = new sap.m.Button({icon:\'sap-icon://delete\'}).attachPress({}, function() {\r\n      oDialogoConfirmaEliminacionEmailAdmin.open()\r\n    });\r\n    var oBarNewTableEmailAdminText = new sap.m.Text({text:\'Email Administrador\'})\r\n    var oBarNewTableEmailAdmin = new sap.m.Bar( {\r\n        contentLeft : [oBarNewTableEmailAdminText],\r\n        contentMiddle : [],\r\n        contentRight : [oButtonDeleteEmailAdmin]\r\n    });\r\n    var oTableEmailAdmin = new sap.ui.table.Table(\'oTableEmailAdmin\',{\r\n      title: oBarNewTableEmailAdmin,                                   // Displayed as the heading of the table\r\n      selectionMode: sap.ui.table.SelectionMode.MultiToggle,\r\n      enableColumnReordering:true,       // Allows you to drag and drop the column and reorder the position of the column\r\n      width:"100%"                              // width of the table\r\n    }).addColumn(new sap.ui.table.Column({\r\n      label: new sap.m.Label({text: "Correo Electrónico"}),             // Creates an Header with value defined for the text attribute\r\n      template: new sap.m.Text().bindProperty("text", "USER"), // binds the value into the text field defined using JSON\r\n      sortProperty: "USER",        // enables sorting on the column\r\n      filterProperty: "USER",       // enables set filter on the column\r\n    }));\r\n    var oInputEmailAdminDia = new sap.m.Input("oInputEmailAdminDia", {width: \'100%\', type: sap.m.InputType.Email}).setPlaceholder(\'Correo Electrónico\')\r\n    var oButtonEmailAdminDiaAdd = new sap.m.Button(\'oButtonEmailAdminDiaAdd\', {width: \'100%\', icon:\'sap-icon://add\', text: \'Asignar Como Administrador\'}).attachPress({}, function() {\r\n      addEmailAdmin(oInputEmailNotifyDia.getValue())\r\n    })\r\n    function getEmailAdmin() {\r\n      $.get(SERVER_MONITOR+"email_admin.xsjs",function(result){\r\n        var model = JSON.parse(result)\r\n        if (!model.error) {\r\n          var oModel = new sap.ui.model.json.JSONModel();        // created a JSON model      \r\n          oModel.setData({modelData: model});                              // Set the data to the model using the JSON object defined already\r\n          oTableEmailAdmin.setModel(oModel);                                                                                  \r\n          oTableEmailAdmin.bindRows("/modelData");\r\n        }\r\n      });\r\n    }\r\n    function addEmailAdmin(email) {\r\n      $.ajax({\r\n        "url": SERVER_MONITOR+\'addEmailAdmin.xsjs/\',\r\n        contentType: "application/json; charset=utf-8",\r\n        dataType: "json",\r\n        type: "POST",\r\n        "data": JSON.stringify({\r\n          email: email.toUpperCase(),\r\n        }),\r\n        "success": function(data) {\r\n          var responseJson = {}\r\n          if (typeof(data) == \'String\') {\r\n            responseJson = JSON.parse(data);\r\n          } else {\r\n            responseJson = data  \r\n          }\r\n          getEmailAdmin();\r\n        },\r\n        "error": function(){\r\n          logout()\r\n        },\r\n        "complete": function() {\r\n          //location.reload()\r\n        }\r\n      });\r\n    }\r\n\r\n    function EmailNotify(){\r\n      TituloDeLaAplicacion.setText("Notificaciones y Usuarios Administradores")\r\n      getEmailNotify()\r\n      getEmailAdmin()\r\n      oGridBeforeHeader.removeAllContent()\r\n      oGridHeader.removeAllContent()\r\n      oGridBody.removeAllContent()\r\n      oGridinputCheckBox.removeAllContent()\r\n      oGridBeforeHeader.addContent(oInputEmailNotifyDia)\r\n      oGridHeader.addContent(oButtonEmailNotifyDiaAdd)\r\n      oGridHeader.addContent(oButtonEmailAdminDiaAdd)\r\n      oGridHeader.addContent(oTableEmailNotify)\r\n      oGridHeader.addContent(oTableEmailAdmin)\r\n      oInputFlowgraph.setSelectedKey(\'0\')\r\n      oBar.removeAllContentLeft()\r\n      oBar.addContentLeft(oButtonBack)\r\n      oGridIndexBody.removeAllContent()\r\n    }\r\n\r\n\r\n    var OFullConten = new sap.ui.layout.DynamicSideContent(\'OFullConten\', {showSideContent: false, sideContentVisibility: sap.ui.layout.SideContentVisibility.AlwaysShow, sideContentPosition: sap.ui.layout.SideContentPosition.Begin}).addMainContent(oGridBeforeHeader).addMainContent(oGridHeader).addMainContent(oGridBody).addMainContent(oGridIndexBody).addSideContent(oSideBar)\r\n    var oPage = new sap.m.Page({\r\n      content: OFullConten,\r\n    });\r\n    var oBarFooter = new sap.m.Bar( {\r\n       contentLeft : [],\r\n       contentMiddle : [],\r\n       contentRight : [new sap.m.Button(\'logout\', {text: \'logout\'}).attachPress({}, function() {\r\n          logout()\r\n        })]\r\n    });\r\n    oPage.setCustomHeader(oBar);\r\n    oPage.setFooter(oBarFooter);\r\n\r\n    var app = new sap.m.App("myApp", {\r\n      initialPage: "oPage"\r\n    });\r\n    app.addPage(oPage);\r\n\r\n    return app;\r\n  }\r\n\r\n});',
"datosmaestros3/datosmaestros3/i18n/i18n.properties":"title=Title\nappTitle=datosmaestros3\nappDescription=App Description","datosmaestros3/datosmaestros3/manifest.json":'{\n\t"_version": "1.8.0",\n\t"sap.app": {\n\t\t"id": "datosmaestros3.datosmaestros3",\n\t\t"type": "application",\n\t\t"i18n": "i18n/i18n.properties",\n\t\t"applicationVersion": {\n\t\t\t"version": "1.0.0"\n\t\t},\n\t\t"title": "{{appTitle}}",\n\t\t"description": "{{appDescription}}",\n\t\t"sourceTemplate": {\n\t\t\t"id": "ui5template.basicSAPUI5ApplicationProject",\n\t\t\t"version": "1.38.11"\n\t\t}\n\t},\n\t"sap.ui": {\n\t\t"technology": "UI5",\n\t\t"icons": {\n\t\t\t"icon": "",\n\t\t\t"favIcon": "",\n\t\t\t"phone": "",\n\t\t\t"phone@2": "",\n\t\t\t"tablet": "",\n\t\t\t"tablet@2": ""\n\t\t},\n\t\t"deviceTypes": {\n\t\t\t"desktop": true,\n\t\t\t"tablet": true,\n\t\t\t"phone": true\n\t\t},\n\t\t"supportedThemes": [\n\t\t\t"sap_hcb",\n\t\t\t"sap_belize"\n\t\t]\n\t},\n\t"sap.ui5": {\n\t\t"rootView": {\n\t\t\t"viewName": "datosmaestros3.datosmaestros3.view.index",\n\t\t\t"type": "JS"\n\t\t},\n\t\t"dependencies": {\n\t\t\t"minUI5Version": "1.60.1",\n\t\t\t"libs": {\n\t\t\t\t"sap.ui.layout": {},\n\t\t\t\t"sap.ui.core": {},\n\t\t\t\t"sap.m": {}\n\t\t\t}\n\t\t},\n\t\t"contentDensities": {\n\t\t\t"compact": true,\n\t\t\t"cozy": true\n\t\t},\n\t\t"models": {\n\t\t\t"i18n": {\n\t\t\t\t"type": "sap.ui.model.resource.ResourceModel",\n\t\t\t\t"settings": {\n\t\t\t\t\t"bundleName": "datosmaestros3.datosmaestros3.i18n.i18n"\n\t\t\t\t}\n\t\t\t}\n\t\t},\n\t\t"resources": {\n\t\t\t"css": [\n\t\t\t\t{\n\t\t\t\t\t"uri": "css/style.css"\n\t\t\t\t}\n\t\t\t]\n\t\t},\n\t\t"routing": {\n\t\t\t"config": {\n\t\t\t\t"routerClass": "sap.m.routing.Router",\n\t\t\t\t"viewType": "XML",\n\t\t\t\t"async": true,\n\t\t\t\t"viewPath": "datosmaestros3.datosmaestros3.view",\n\t\t\t\t"controlAggregation": "pages",\n\t\t\t\t"controlId": "idAppControl",\n\t\t\t\t"clearControlAggregation": false\n\t\t\t},\n\t\t\t"routes": [\n\t\t\t\t{\n\t\t\t\t\t"name": "Routeindex",\n\t\t\t\t\t"pattern": "Routeindex",\n\t\t\t\t\t"target": [\n\t\t\t\t\t\t"Targetindex"\n\t\t\t\t\t]\n\t\t\t\t}\n\t\t\t],\n\t\t\t"targets": {\n\t\t\t\t"Targetindex": {\n\t\t\t\t\t"viewType": "XML",\n\t\t\t\t\t"transition": "slide",\n\t\t\t\t\t"clearControlAggregation": false,\n\t\t\t\t\t"viewName": "index"\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t},\n\t"sap.platform.hcp": {\n\t\t"uri": "webapp",\n\t\t"_version": "1.1.0"\n\t}\n}'}});